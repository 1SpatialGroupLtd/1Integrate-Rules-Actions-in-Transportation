<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Backup xmlns="http://schema.onespatial.com/radius/studio/v2" xmlns:gml="http://www.opengis.net/gml">
    <RuleFolder>
        <Metadata>
            <Name>RULE</Name>
            <Created>
                <UserDate date="2018-10-04T02:20:51.000Z" user="Radius Studio"/>
            </Created>
            <LastEdited>
                <UserDate date="2018-10-04T02:20:51.000Z" user="Radius Studio"/>
            </LastEdited>
        </Metadata>
        <IsShortcut>false</IsShortcut>
        <RuleFolder>
            <Metadata>
                <Name>hpms</Name>
                <Description/>
                <Comments>Branch: master
Recent Commits:
</Comments>
                <Created>
                    <UserDate/>
                </Created>
                <LastEdited>
                    <UserDate date="2020-01-02T00:19:29.000Z" user="1Spatial"/>
                </LastEdited>
            </Metadata>
            <IsShortcut>false</IsShortcut>
            <RuleFolder>
                <Metadata>
                    <Name>HPMS</Name>
                    <Created>
                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                    </Created>
                    <LastEdited>
                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                    </LastEdited>
                </Metadata>
                <IsShortcut>false</IsShortcut>
                <RuleFolder>
                    <Metadata>
                        <Name>1 - Arnold</Name>
                        <Description/>
                        <Comments>Branch: master
Recent Commits:
</Comments>
                        <Created>
                            <UserDate/>
                        </Created>
                        <LastEdited>
                            <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                        </LastEdited>
                    </Metadata>
                    <IsShortcut>false</IsShortcut>
                    <RuleFolder>
                        <Metadata>
                            <Name>Essential Geometry Checks</Name>
                            <Description/>
                            <Comments>Branch: master
Recent Commits:
</Comments>
                            <Created>
                                <UserDate/>
                            </Created>
                            <LastEdited>
                                <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                            </LastEdited>
                        </Metadata>
                        <IsShortcut>false</IsShortcut>
                        <Item id="RULE://hpms/HPMS/1 - Arnold/Essential Geometry Checks/Check for Duplicate Features">
                            <Metadata>
                                <Name>Check for Duplicate Features</Name>
                                <Description>Checks all geometries for duplicates within a feature layer (i.e. more than one feature with the same geometry in the same layer). </Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="ARNOLD" objLabel="">
                                    <ConditionalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                            <NotEqualsRelation/>
                                            <NullValue/>
                                        </RelationalPredicate>
                                        <ExistsPredicate qualifier="exactly" n="0" classLabel="ARNOLD" objLabel="duplicate">
                                            <AndPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="ARNOLD" objRef="duplicate" propName="geometry"/>
                                                    <SpatialEqualsRelation/>
                                                    <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <ObjectValue classRef="ARNOLD" objRef="duplicate"/>
                                                    <NotEqualsRelation/>
                                                    <ObjectValue classRef="ARNOLD" objRef=""/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/1 - Arnold/Essential Geometry Checks/Check for Duplicate Vertices">
                            <Metadata>
                                <Name>Check for Duplicate Vertices</Name>
                                <Description>Checks all geometries for duplicate points (vertices). These are duplicate consecutive points in a line or polygon, caused by â€˜double digitisingâ€™.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="ARNOLD" objLabel="">
                                    <ConditionalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                            <NotEqualsRelation/>
                                            <NullValue/>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <BuiltinFnValue fnName="has_duplicates">
                                                <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                            </BuiltinFnValue>
                                            <EqualsRelation/>
                                            <StaticValue datatype="boolean" value="false"/>
                                        </RelationalPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/1 - Arnold/Essential Geometry Checks/Check for Kickbacks">
                            <Metadata>
                                <Name>Check for Kickbacks</Name>
                                <Description>Checks the linework of geometries to make sure there are no 'kickbacks'. A kickback is a z shape formed when a segment of line or polygon boundary has two sharp angles less than 12 degrees and one after the other in opposite directions.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="ARNOLD" objLabel="">
                                    <ConditionalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                            <NotEqualsRelation/>
                                            <NullValue/>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <BuiltinFnValue fnName="has_kickbacks">
                                                <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                            </BuiltinFnValue>
                                            <EqualsRelation/>
                                            <StaticValue datatype="boolean" value="false"/>
                                        </RelationalPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/1 - Arnold/Essential Geometry Checks/Check for Multipart Geometries">
                            <Metadata>
                                <Name>Check for Multipart Geometries</Name>
                                <Description>Checks that features are comprised of only one part (i.e. not a multi-part geometry). This rule is useful where multi-Â­part geometries are not allowed in datasets.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="ARNOLD" objLabel="all">
                                    <ConditionalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="ARNOLD" objRef="all" propName="geometry"/>
                                            <NotEqualsRelation/>
                                            <NullValue/>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <BuiltinFnValue fnName="count_parts">
                                                <DynamicValue classRef="ARNOLD" objRef="all" propName="geometry"/>
                                            </BuiltinFnValue>
                                            <EqualsRelation/>
                                            <StaticValue datatype="integer" value="1"/>
                                        </RelationalPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/1 - Arnold/Essential Geometry Checks/Check for Overlap">
                            <Metadata>
                                <Name>Check for Overlap</Name>
                                <Description>Checks all geometries that there are no other geometries within the same feature layer which overlap, contain, or are within the geometry.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="ARNOLD" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                                <NotEqualsRelation/>
                                                <NullValue/>
                                            </RelationalPredicate>
                                            <RelationalPredicate>
                                                <BuiltinFnValue fnName="dimension">
                                                    <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                                </BuiltinFnValue>
                                                <NotEqualsRelation/>
                                                <StaticValue datatype="integer" value="0"/>
                                            </RelationalPredicate>
                                            <RelationalPredicate>
                                                <BuiltinFnValue fnName="is_valid">
                                                    <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                                </BuiltinFnValue>
                                                <EqualsRelation/>
                                                <StaticValue datatype="boolean" value="true"/>
                                            </RelationalPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="0" classLabel="ARNOLD" objLabel="overlap">
                                            <AndPredicate>
                                                <RelationalPredicate>
                                                    <BuiltinFnValue fnName="is_valid">
                                                        <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                                    </BuiltinFnValue>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="boolean" value="true"/>
                                                </RelationalPredicate>
                                                <OrPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="ARNOLD" objRef="overlap" propName="geometry"/>
                                                        <SpatialOverlapsRelation/>
                                                        <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                                    </RelationalPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="ARNOLD" objRef="overlap" propName="geometry"/>
                                                        <SpatialWithinRelation/>
                                                        <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                                    </RelationalPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="ARNOLD" objRef="overlap" propName="geometry"/>
                                                        <SpatialContainsRelation/>
                                                        <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                                    </RelationalPredicate>
                                                </OrPredicate>
                                                <NotPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="ARNOLD" objRef="overlap" propName="geometry"/>
                                                        <SpatialEqualsRelation/>
                                                        <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                                    </RelationalPredicate>
                                                </NotPredicate>
                                                <RelationalPredicate>
                                                    <ObjectValue classRef="ARNOLD" objRef="overlap"/>
                                                    <NotEqualsRelation/>
                                                    <ObjectValue classRef="ARNOLD" objRef=""/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/1 - Arnold/Essential Geometry Checks/Check for Self-Intersections">
                            <Metadata>
                                <Name>Check for Self-Intersections</Name>
                                <Description>Checks lines and polygon features to make sure the linework does not selfÂ­-intersect.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="ARNOLD" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                                <NotEqualsRelation/>
                                                <NullValue/>
                                            </RelationalPredicate>
                                            <RelationalPredicate>
                                                <BuiltinFnValue fnName="count_parts">
                                                    <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                                </BuiltinFnValue>
                                                <EqualsRelation/>
                                                <StaticValue datatype="integer" value="1"/>
                                            </RelationalPredicate>
                                        </AndPredicate>
                                        <RelationalPredicate>
                                            <BuiltinFnValue fnName="find_self_intersections">
                                                <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                            </BuiltinFnValue>
                                            <EqualsRelation/>
                                            <NullValue/>
                                        </RelationalPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/1 - Arnold/Essential Geometry Checks/Check for Spikes">
                            <Metadata>
                                <Name>Check for Spikes</Name>
                                <Description>Checks the linework of geometries to make sure there are no 'spikes'. A spike is an angle of less than six degrees.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="ARNOLD" objLabel="">
                                    <ConditionalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                            <NotEqualsRelation/>
                                            <NullValue/>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <BuiltinFnValue fnName="has_spikes">
                                                <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                            </BuiltinFnValue>
                                            <EqualsRelation/>
                                            <StaticValue datatype="boolean" value="false"/>
                                        </RelationalPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/1 - Arnold/Essential Geometry Checks/Check that Features are Simple">
                            <Metadata>
                                <Name>Check that Features are Simple</Name>
                                <Description>Checks all geometries to determine whether they are simple according to the criteria in "OpenGIS Implementation Specification for Geographic information Simple feature access - Part 1: Common architecture." The criteria applied are: \n-&gt; empty geometries are not OGC simple \n-&gt; a single-Â­part point geometry is OGC simple \n-&gt; a single-part line geometry is OGC simple if it has no self-intersection or self-Â­touch points Exception: an open line with coincident start and end points is OGC simple if it has no other self-intersection or self-Â­touch points \n-&gt; a single-part area geometry is OGC simple if it is OGC valid\n-&gt; a multiÂ­-part geometry that contains a mixture of geometry types is not OGC simple \n-&gt; a multi-part point geometry is OGC simple if it contains no coincident single-part point geometries \n-&gt; a multi-part line geometry is OGC simple if none of its components intersect or touch except at open line start/end points. It may not touch other lines \n-&gt; a multiÂ­-part area is OGC simple if it is OGC valid</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="ARNOLD" objLabel="">
                                    <ConditionalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                            <NotEqualsRelation/>
                                            <NullValue/>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <BuiltinFnValue fnName="is_simple">
                                                <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                            </BuiltinFnValue>
                                            <EqualsRelation/>
                                            <StaticValue datatype="boolean" value="true"/>
                                        </RelationalPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/1 - Arnold/Essential Geometry Checks/Check that Features are Valid">
                            <Metadata>
                                <Name>Check that Features are Valid</Name>
                                <Description>Checks all geometries to ensure validity according to the OGC definition. The validity criteria are: \n-&gt; empty geometries containing no vertices are invalid \n-&gt; single or multi part point geometries are always valid \n-&gt; single or multi part line geometries are valid if each line consists of at least two non-identical vertices\n-&gt; a single-part area geometry is valid if each ring is a valid line with at least three vertices that form a closed shape, the outer ring encloses any inner rings, no ring intersects another ring or itself. A ring may touch another ring at a point, but must not cross it or have any linework in common. A ring must not contain duplicate points</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="ARNOLD" objLabel="">
                                    <RelationalPredicate>
                                        <BuiltinFnValue fnName="is_valid">
                                            <DynamicValue classRef="ARNOLD" objRef="" propName="geometry"/>
                                        </BuiltinFnValue>
                                        <EqualsRelation/>
                                        <StaticValue datatype="boolean" value="true"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                    </RuleFolder>
                </RuleFolder>
                <RuleFolder>
                    <Metadata>
                        <Name>2 - Section Mapping</Name>
                        <Description/>
                        <Comments>Branch: master
Recent Commits:
</Comments>
                        <Created>
                            <UserDate date="2020-01-02T00:19:26.000Z"/>
                        </Created>
                        <LastEdited>
                            <UserDate date="2020-01-02T00:19:26.000Z"/>
                        </LastEdited>
                    </Metadata>
                    <IsShortcut>false</IsShortcut>
                </RuleFolder>
                <RuleFolder>
                    <Metadata>
                        <Name>3 - Inventory Checks</Name>
                        <Description/>
                        <Comments>Branch: master
Recent Commits:
</Comments>
                        <Created>
                            <UserDate/>
                        </Created>
                        <LastEdited>
                            <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                        </LastEdited>
                    </Metadata>
                    <IsShortcut>false</IsShortcut>
                    <RuleFolder>
                        <Metadata>
                            <Name>Coverage</Name>
                            <Description/>
                            <Comments>Branch: master
Recent Commits:
</Comments>
                            <Created>
                                <UserDate/>
                            </Created>
                            <LastEdited>
                                <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                            </LastEdited>
                        </Metadata>
                        <IsShortcut>false</IsShortcut>
                        <RuleFolder>
                            <Metadata>
                                <Name>Sample Topology Checks</Name>
                                <Description>Where Sample object exists, the following objects must also exist:\nPEAK_LANES, SPEED_LIMIT, PCT_PEAK_SINGLE, PCT_PEAK_COMBINATION, K_FACTOR, DIR_FACTOR, FUTURE_AADT, STOP_SIGNS, AT_GRADE_OTHER, LANE_WIDTH, MEDIAN_TYPE, SHOULDER_TYPE, WIDENING_OBSTACLE, and WIDENING_POTENTIAL.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/10 - PEAK_LANES Must Exist">
                                <Metadata>
                                    <Name>10 - PEAK_LANES Must Exist</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="PEAK_LANES" objLabel="">
                                                <ReferentialPredicate classRef1="PEAK_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/14 - SPEED_LIMIT Must Exist">
                                <Metadata>
                                    <Name>14 - SPEED_LIMIT Must Exist</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SPEED_LIMIT" objLabel="">
                                                <ReferentialPredicate classRef1="SPEED_LIMIT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/23 - PCT_PEAK_SINGLE Must Exist">
                                <Metadata>
                                    <Name>23 - PCT_PEAK_SINGLE Must Exist</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="PCT_PEAK_SINGLE_UNIT" objLabel="">
                                                <ReferentialPredicate classRef1="PCT_PEAK_SINGLE_UNIT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/25 - PCT_PEAK_COMBINATION Must Exist">
                                <Metadata>
                                    <Name>25 - PCT_PEAK_COMBINATION Must Exist</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="PCT_PEAK_COMBINATION" objLabel="">
                                                <ReferentialPredicate classRef1="PCT_PEAK_COMBINATION" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/26 - K_FACTOR Must Exist">
                                <Metadata>
                                    <Name>26 - K_FACTOR Must Exist</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="K_FACTOR" objLabel="">
                                                <ReferentialPredicate classRef1="K_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/27 - DIR_FACTOR Must Exist">
                                <Metadata>
                                    <Name>27 - DIR_FACTOR Must Exist</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="DIR_FACTOR" objLabel="">
                                                <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/28 - FUTURE_AADT Must Exist">
                                <Metadata>
                                    <Name>28 - FUTURE_AADT Must Exist</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FUTURE_AADT" objLabel="">
                                                <ReferentialPredicate classRef1="FUTURE_AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/32 - STOP_SIGNS Must Exist">
                                <Metadata>
                                    <Name>32 - STOP_SIGNS Must Exist</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="STOP_SIGNS" objLabel="">
                                                <ReferentialPredicate classRef1="STOP_SIGNS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/33 - AT_GRADE_OTHER Must Exist">
                                <Metadata>
                                    <Name>33 - AT_GRADE_OTHER Must Exist</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AT_GRADE_OTHER" objLabel="">
                                                <ReferentialPredicate classRef1="AT_GRADE_OTHER" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/34 - LANE_WIDTH Must Exist">
                                <Metadata>
                                    <Name>34 - LANE_WIDTH Must Exist</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="LANE_WIDTH" objLabel="">
                                                <ReferentialPredicate classRef1="LANE_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/35 - MEDIAN_TYPE Must Exist">
                                <Metadata>
                                    <Name>35 - MEDIAN_TYPE Must Exist</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="MEDIAN_TYPE" objLabel="">
                                                <ReferentialPredicate classRef1="MEDIAN_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/37 - SHOULDER_TYPE Must Exist">
                                <Metadata>
                                    <Name>37 - SHOULDER_TYPE Must Exist</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SHOULDER_TYPE" objLabel="">
                                                <ReferentialPredicate classRef1="SHOULDER_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/41 - WIDENING_OBSTACLE">
                                <Metadata>
                                    <Name>41 - WIDENING_OBSTACLE</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="WIDENING_OBSTACLE" objLabel="">
                                                <ReferentialPredicate classRef1="WIDENING_OBSTACLE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/42 - WIDENING_POTENTIAL Must Exist">
                                <Metadata>
                                    <Name>42 - WIDENING_POTENTIAL Must Exist</Name>
                                    <Description/>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="WIDENING_POTENTIAL" objLabel="">
                                                <ReferentialPredicate classRef1="WIDENING_POTENTIAL" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                            <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/Sample Topology Checks/Sample Topology Check">
                                <Metadata>
                                    <Name>Sample Topology Check</Name>
                                    <Description>Where Sample object exists, the following objects must also exist:\nPEAK_LANES, SPEED_LIMIT, PCT_PEAK_SINGLE, PCT_PEAK_COMBINATION, K_FACTOR, DIR_FACTOR, FUTURE_AADT, STOP_SIGNS, AT_GRADE_OTHER, LANE_WIDTH, MEDIAN_TYPE, SHOULDER_TYPE, WIDENING_OBSTACLE, and WIDENING_POTENTIAL.</Description>
                                    <Comments>Branch: master
Recent Commits:
</Comments>
                                    <Created>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </Created>
                                    <LastEdited>
                                        <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                    </LastEdited>
                                </Metadata>
                                <IsShortcut>false</IsShortcut>
                                <Rule>
                                    <RootPredicate classLabel="sys:edge" objLabel="">
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="PEAK_LANES" objLabel="">
                                                    <ReferentialPredicate classRef1="PEAK_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="SPEED_LIMIT" objLabel="">
                                                    <ReferentialPredicate classRef1="SPEED_LIMIT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="PCT_PEAK_SINGLE_UNIT" objLabel="">
                                                    <ReferentialPredicate classRef1="PCT_PEAK_SINGLE_UNIT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="PCT_PEAK_COMBINATION" objLabel="">
                                                    <ReferentialPredicate classRef1="PCT_PEAK_COMBINATION" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="K_FACTOR" objLabel="">
                                                    <ReferentialPredicate classRef1="K_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="DIR_FACTOR" objLabel="">
                                                    <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="FUTURE_AADT" objLabel="">
                                                    <ReferentialPredicate classRef1="FUTURE_AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="STOP_SIGNS" objLabel="">
                                                    <ReferentialPredicate classRef1="STOP_SIGNS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="AT_GRADE_OTHER" objLabel="">
                                                    <ReferentialPredicate classRef1="AT_GRADE_OTHER" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="LANE_WIDTH" objLabel="">
                                                    <ReferentialPredicate classRef1="LANE_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="MEDIAN_TYPE" objLabel="">
                                                    <ReferentialPredicate classRef1="MEDIAN_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="SHOULDER_TYPE" objLabel="">
                                                    <ReferentialPredicate classRef1="SHOULDER_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="WIDENING_OBSTACLE" objLabel="">
                                                    <ReferentialPredicate classRef1="WIDENING_OBSTACLE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="WIDENING_POTENTIAL" objLabel="">
                                                    <ReferentialPredicate classRef1="WIDENING_POTENTIAL" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                            </AndPredicate>
                                        </ConditionalPredicate>
                                    </RootPredicate>
                                </Rule>
                            </Item>
                        </RuleFolder>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/00a - sys_edge Coverage">
                            <Metadata>
                                <Name>00a - sys_edge Coverage</Name>
                                <Description>Every sys:edge must reference at least 1 FACILITY_TYPE object, 1 OWNERSHIP object, and 1 ROUTE_NUMBER object.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <AndPredicate>
                                        <ExistsPredicate qualifier="at least" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                            <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                        <ExistsPredicate qualifier="at least" n="1" classLabel="OWNERSHIP" objLabel="">
                                            <ReferentialPredicate classRef1="OWNERSHIP" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                        <ExistsPredicate qualifier="at least" n="1" classLabel="ROUTE_NUMBER" objLabel="">
                                            <ReferentialPredicate classRef1="ROUTE_NUMBER" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/00b - ARNOLD Coverage">
                            <Metadata>
                                <Name>00b - ARNOLD Coverage</Name>
                                <Description/>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <ExistsPredicate qualifier="at least" n="1" classLabel="ARNOLD" objLabel="">
                                            <ReferentialPredicate classRef1="ARNOLD" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="at least" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="at least" n="1" classLabel="F_SYSTEM" objLabel="">
                                                <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="at least" n="1" classLabel="OWNERSHIP" objLabel="">
                                                <ReferentialPredicate classRef1="OWNERSHIP" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="at least" n="1" classLabel="URBAN_CODE" objLabel="">
                                                <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/01 - F_SYSTEM Must Exist">
                            <Metadata>
                                <Name>01 - F_SYSTEM Must Exist</Name>
                                <Description>F_SYSTEM object must exist for all FACILITY_TYPE objects with a Value_Numeric of 1,2,4,5,6.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ForAllPredicate classLabel="FACILITY_TYPE" objLabel="">
                                        <AndPredicate>
                                            <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                <StaticValue datatype="integer" value="1"/>
                                                <StaticValue datatype="integer" value="6"/>
                                            </RangePredicate>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                <NotEqualsRelation/>
                                                <StaticValue datatype="integer" value="3"/>
                                            </RelationalPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="F_SYSTEM" objRef="" propName="Route_ID"/>
                                                    <EqualsRelation/>
                                                    <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Route_ID"/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                    </ForAllPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/02 - URBAN_CODE Must Exist">
                            <Metadata>
                                <Name>02 - URBAN_CODE Must Exist</Name>
                                <Description>URBAN_CODE object must exist for all FACILITY_TYPE objects with a Value_Numeric of 1,2,4 and for all F_SYSTEM objects with a Value_Numeric of 1,2,3,4,5, or\nfor all NHS objects, or\nfor all FACILITY_TYPE objects with a Value_Numeric of 6 and for all DIR_THROUGH_LANES with a Value_Numeric greater than 0 and for all F_SYSTEM objects with a Value_Numeric of 1 and (for all IRI objects whose Value_Numeric is not null or for all PSR objects whose Value_Numeric is not null).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="at least" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="4"/>
                                                        </RangePredicate>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <NotEqualsRelation/>
                                                            <StaticValue datatype="integer" value="3"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="at least" n="1" classLabel="F_SYSTEM" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="5"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                            </AndPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="at least" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <EqualsRelation/>
                                                            <StaticValue datatype="integer" value="6"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="at least" n="1" classLabel="DIR_FACTOR" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="DIR_FACTOR" objRef="" propName="Value_Numeric"/>
                                                            <GreaterRelation/>
                                                            <StaticValue datatype="integer" value="0"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="at least" n="1" classLabel="F_SYSTEM" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                            <EqualsRelation/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="at least" n="1" classLabel="IRI" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                                                <NotEqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="at least" n="1" classLabel="PSR" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="PSR" objRef="" propName="Value_Numeric"/>
                                                                <NotEqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                        </OrPredicate>
                                        <ForAllPredicate classLabel="FACILITY_TYPE" objLabel="">
                                            <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="URBAN_CODE" objRef="" propName="Route_ID"/>
                                                        <EqualsRelation/>
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Route_ID"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </ForAllPredicate>
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="at least" n="1" classLabel="NHS" objLabel="">
                                                <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ForAllPredicate classLabel="NHS" objLabel="">
                                                <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="URBAN_CODE" objRef="" propName="Route_ID"/>
                                                            <EqualsRelation/>
                                                            <DynamicValue classRef="NHS" objRef="" propName="Route_ID"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                            </ForAllPredicate>
                                        </ConditionalPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/03 - FACILITY_TYPE Must Exist">
                            <Metadata>
                                <Name>03 - FACILITY_TYPE Must Exist</Name>
                                <Description>FACILITY_TYPE object must exist for all F_SYSTEM objects with a Value_Numeric of 1,2,3,4,5,6,7.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ForAllPredicate classLabel="F_SYSTEM" objLabel="">
                                        <AndPredicate>
                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                <StaticValue datatype="integer" value="1"/>
                                                <StaticValue datatype="integer" value="7"/>
                                            </RangePredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Route_ID"/>
                                                    <EqualsRelation/>
                                                    <DynamicValue classRef="F_SYSTEM" objRef="" propName="Route_ID"/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                    </ForAllPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/05 - ACCESS_CONTROL Must Exist">
                            <Metadata>
                                <Name>05 - ACCESS_CONTROL Must Exist</Name>
                                <Description>ACCESS_CONTROL object must exist for all FACILITY_TYPE objects with a Value_Numeric of 1,2 and (for all F_SYSTEM objects with a Value_Numeric of 1,2,3 or for all Sample objects or for all NHS objects).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="3"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                    <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                    <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="ACCESS_CONTROL" objLabel="">
                                            <ReferentialPredicate classRef1="ACCESS_CONTROL" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/06 - OWNERSHIP Must Exist">
                            <Metadata>
                                <Name>06 - OWNERSHIP Must Exist</Name>
                                <Description>OWNERSHIP object must exist for all F_SYSTEM objects with a Value_Numeric of 1,2,3,4,5,6,7 and for all FACILITY_TYPE objects with a Value_Numeric of 1,2,5,6.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="7"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="6"/>
                                                    </RangePredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <NotEqualsRelation/>
                                                        <StaticValue datatype="integer" value="3"/>
                                                    </RelationalPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <NotEqualsRelation/>
                                                        <StaticValue datatype="integer" value="4"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="OWNERSHIP" objLabel="">
                                            <ReferentialPredicate classRef1="OWNERSHIP" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/07 - THROUGH_LANES Must Exist">
                            <Metadata>
                                <Name>07 - THROUGH_LANES Must Exist</Name>
                                <Description>THROUGH_LANES object must exist for all FACILITY_TYPE objects with a Value_Numeric of 1,2,4 and (for all F_SYSTEM objects with a Value_Numeric of 1,2,3,4,5 or (for all F_SYSTEM objects with a Value_Numeric of 6 and URBAN_CODE objects with a Value_Numeric less than 99999) or for all NHS objects).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="4"/>
                                                    </RangePredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <NotEqualsRelation/>
                                                        <StaticValue datatype="integer" value="3"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="5"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <AndPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                <EqualsRelation/>
                                                                <StaticValue datatype="integer" value="6"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                                <LessRelation/>
                                                                <StaticValue datatype="integer" value="99999"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                </AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                    <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="THROUGH_LANES" objLabel="">
                                            <ReferentialPredicate classRef1="THROUGH_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/08 - HOV_TYPE Must Exist">
                            <Metadata>
                                <Name>08 - HOV_TYPE Must Exist</Name>
                                <Description>HOV_TYPE object must exist for all HOV_LANES objects.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="HOV_LANES" objLabel="">
                                            <ReferentialPredicate classRef1="HOV_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="HOV_TYPE" objLabel="">
                                            <ReferentialPredicate classRef1="HOV_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/09 - HOV_LANES Must Exist">
                            <Metadata>
                                <Name>09 - HOV_LANES Must Exist</Name>
                                <Description>HOV_LANES object must exist for all HOV_TYPE objects.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="HOV_TYPE" objLabel="">
                                            <ReferentialPredicate classRef1="HOV_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="HOV_LANES" objLabel="">
                                            <ReferentialPredicate classRef1="HOV_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/11 - COUNTER_PEAK_LANES Must Exist">
                            <Metadata>
                                <Name>11 - COUNTER_PEAK_LANES Must Exist</Name>
                                <Description>COUNTER_PEAK_LANES object must exist for all Sample objects and FACILITY_TYPE objects with a Value_Numeric of 2 and (for all URBAN_CODE objects with a Value_Numeric less than 99999 or for all THROUGH_LANE objects with a Value_Numeric less than or equal to 4).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                            <LessRelation/>
                                                            <StaticValue datatype="integer" value="99999"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="THROUGH_LANES" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="THROUGH_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="THROUGH_LANES" objRef="" propName="Value_Numeric"/>
                                                            <GreaterEqualsRelation/>
                                                            <StaticValue datatype="integer" value="4"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="COUNTER_PEAK_LANES" objLabel="">
                                            <ReferentialPredicate classRef1="COUNTER_PEAK_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/12,13 - TURN_LANES_R and TURN_LANES_L Must Exist">
                            <Metadata>
                                <Name>12,13 - TURN_LANES_R and TURN_LANES_L Must Exist</Name>
                                <Description>TURN_LANES_R and TURN_LANES_L objects must exist for all Sample objects and for all URBAN_CODE objects with a Value_Numeric less than 99999 and for all ACCESS_CONTROL objects with a Value_Numeric greater than 1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                        <LessRelation/>
                                                        <StaticValue datatype="integer" value="99999"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="ACCESS_CONTROL" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="ACCESS_CONTROL" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="ACCESS_CONTROL" objRef="" propName="Value_Numeric"/>
                                                        <GreaterRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="TURN_LANES_R" objLabel="">
                                                <ReferentialPredicate classRef1="TURN_LANES_R" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="TURN_LANES_L" objLabel="">
                                                <ReferentialPredicate classRef1="TURN_LANES_L" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/15 - TOLL_CHARGED Must Exist">
                            <Metadata>
                                <Name>15 - TOLL_CHARGED Must Exist</Name>
                                <Description>TOLL_CHARGED object must exist for all TOLL_TYPE objects.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="TOLL_TYPE" objLabel="">
                                            <ReferentialPredicate classRef1="TOLL_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="TOLL_CHARGED" objLabel="">
                                            <ReferentialPredicate classRef1="TOLL_CHARGED" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/16 - TOLL_TYPE Must Exist">
                            <Metadata>
                                <Name>16 - TOLL_TYPE Must Exist</Name>
                                <Description>TOLL_TYPE object must exist for all TOLL_CHARGED objects.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="TOLL_CHARGED" objLabel="">
                                            <ReferentialPredicate classRef1="TOLL_CHARGED" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="TOLL_TYPE" objLabel="">
                                            <ReferentialPredicate classRef1="TOLL_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/17 - ROUTE_NUMBER - Value_Numeric &amp; Value_Text Must Exist">
                            <Metadata>
                                <Name>17 - ROUTE_NUMBER - Value_Numeric &amp; Value_Text Must Exist</Name>
                                <Description>ROUTE_NUMBER object with a Value_Numeric and/or Value_Text must exist for all FACILITY_TYPE objects with a Value_Numeric of 1,2 and for all ROUTE_SIGNING objects with a Value_Numeric of 2,3,4,5,6,7,8,9 and ((for all F_SYSTEM objects with a Value_Numeric of 1,2,3,4 or for all NHS) or (for all F_SYSTEM objects with a Value_Numeric of 1 and for all FACILITY_TYPE with a Value_Numeric of 6 and for all DIR_THROUGH_LANES with a Value_Numeric greater than 0 and (for all IRI objects whose Value_Numeric is not null or for all PSR objects whose Value_Numeric is not null)).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <AndPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                <StaticValue datatype="integer" value="1"/>
                                                                <StaticValue datatype="integer" value="4"/>
                                                            </RangePredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                        <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="2"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="ROUTE_SIGNING" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="ROUTE_SIGNING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="ROUTE_SIGNING" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="2"/>
                                                            <StaticValue datatype="integer" value="9"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                            </AndPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                            <EqualsRelation/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <EqualsRelation/>
                                                            <StaticValue datatype="integer" value="6"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="DIR_FACTOR" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="DIR_FACTOR" objRef="" propName="Value_Numeric"/>
                                                            <GreaterRelation/>
                                                            <StaticValue datatype="integer" value="0"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="IRI" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                                                <NotEqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="PSR" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="PSR" objRef="" propName="Value_Numeric"/>
                                                                <NotEqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                        </OrPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="ROUTE_NUMBER" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="ROUTE_NUMBER" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <OrPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="ROUTE_NUMBER" objRef="" propName="Value_Numeric"/>
                                                        <NotEqualsRelation/>
                                                        <NullValue/>
                                                    </RelationalPredicate>
                                                    <AndPredicate>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="ROUTE_NUMBER" objRef="" propName="Value_Text"/>
                                                            <NotEqualsRelation/>
                                                            <NullValue/>
                                                        </RelationalPredicate>
                                                        <RelationalPredicate>
                                                            <BuiltinFnValue fnName="trim">
                                                                <DynamicValue classRef="ROUTE_NUMBER" objRef="" propName="Value_Text"/>
                                                            </BuiltinFnValue>
                                                            <NotEqualsRelation/>
                                                            <StaticValue datatype="string" value=""/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/18 - ROUTE_SIGNING Must Exist">
                            <Metadata>
                                <Name>18 - ROUTE_SIGNING Must Exist</Name>
                                <Description>ROUTE_SIGNING object must exist for all FACILITY_TYPE objects with a Value_Numeric of 1,2 and (for all F_SYSTEM objects with a Value_Numeric of 1,2,3,4 or for all NHS objects).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="4"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                    <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="ROUTE_SIGNING" objLabel="">
                                            <ReferentialPredicate classRef1="ROUTE_SIGNING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/19 - ROUTE_QUALIFIER Must Exist">
                            <Metadata>
                                <Name>19 - ROUTE_QUALIFIER Must Exist</Name>
                                <Description>ROUTE_QUALIFIER object must exist for all FACILITY_TYPE objects with a Value_Numeric of 1,2 and (for all F_SYSTEM objects with a Value_Numeric of 1,2,3,4 or for all NHS objects).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:26.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="4"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                    <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="ROUTE_QUALIFIER" objLabel="">
                                            <ReferentialPredicate classRef1="ROUTE_QUALIFIER" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/21 - AADT Must Exist">
                            <Metadata>
                                <Name>21 - AADT Must Exist</Name>
                                <Description>AADT object must exist for all FACILITY_TYPE objects with a Value_Numeric of 1,2,4 and (for all F_SYSTEM objects with a Value_Numeric of 1,2,3,4,5 or (for all F_SYSTEM objects with a Value_Numeric of 6 and for all URBAN_CODE objects with a Value_Numeric less than 99999) or for all NHS objects).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="4"/>
                                                    </RangePredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <NotEqualsRelation/>
                                                        <StaticValue datatype="integer" value="3"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="5"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <AndPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                <EqualsRelation/>
                                                                <StaticValue datatype="integer" value="6"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                                <LessRelation/>
                                                                <StaticValue datatype="integer" value="99999"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                </AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                    <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT" objLabel="">
                                            <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/22,24 - AADT_SINGLE_UNIT and AADT_COMBINATION Must Exist">
                            <Metadata>
                                <Name>22,24 - AADT_SINGLE_UNIT and AADT_COMBINATION Must Exist</Name>
                                <Description>AADT_SINGLE_UNIT and AADT_COMBINATION object must exist ((for all F_SYSTEM objects with a Value_Numeric of 1 or for all NHS objects) and for all FACILITY_TYPE objects with a Value_Numeric of 1,2) or for all Sample objects.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <AndPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                <EqualsRelation/>
                                                                <StaticValue datatype="integer" value="1"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                        <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="2"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                            </AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </OrPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT_SINGLE_UNIT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT_SINGLE_UNIT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT_COMBINATION" objLabel="">
                                                <ReferentialPredicate classRef1="AADT_COMBINATION" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/29 - SIGNAL_TYPE Must Exist">
                            <Metadata>
                                <Name>29 - SIGNAL_TYPE Must Exist</Name>
                                <Description>SIGNAL_TYPE object must exist for all Sample objects and for all URBAN_CODE objects with a Value_Numeric not equal to 99999.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                        <NotEqualsRelation/>
                                                        <StaticValue datatype="integer" value="99999"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="SIGNAL_TYPE" objLabel="">
                                            <ReferentialPredicate classRef1="SIGNAL_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/30 - PCT_GREEN_TIME Must Exist">
                            <Metadata>
                                <Name>30 - PCT_GREEN_TIME Must Exist</Name>
                                <Description>PCT_GREEN_TIME object must exist for all Sample objects and for all NUMBER_SIGNALS objects with a Value_Numeric greater than or equal to 1 and for all URBAN_CODE objects with a Value_Numeric less than 99999.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="NUMBER_SIGNALS" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="NUMBER_SIGNALS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="NUMBER_SIGNALS" objRef="" propName="Value_Numeric"/>
                                                        <GreaterEqualsRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                        <LessRelation/>
                                                        <StaticValue datatype="integer" value="99999"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="PCT_GREEN_TIME" objLabel="">
                                            <ReferentialPredicate classRef1="PCT_GREEN_TIME" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/31 - NUMBER_SIGNALS Must Exist">
                            <Metadata>
                                <Name>31 - NUMBER_SIGNALS Must Exist</Name>
                                <Description>NUMBER_SIGNALS object must exist for all Sample objects and (for all PCT_GREEN_TIME objects with a Value_Numeric that is not null or for all SIGNAL_TYPE objects with a Value_Numeric of 1,2,3,4).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="PCT_GREEN_TIME" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="PCT_GREEN_TIME" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="PCT_GREEN_TIME" objRef="" propName="Value_Numeric"/>
                                                            <NotEqualsRelation/>
                                                            <NullValue/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="SIGNAL_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="SIGNAL_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="SIGNAL_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="4"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="NUMBER_SIGNALS" objLabel="">
                                            <ReferentialPredicate classRef1="NUMBER_SIGNALS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/36 - MEDIAN_WIDTH Must Exist">
                            <Metadata>
                                <Name>36 - MEDIAN_WIDTH Must Exist</Name>
                                <Description>MEDIAN_WIDTH object must exist for all Sample objects and for all MEDIAN_TYPE objects with a Value_Numeric of 2,3,4,5,6,7.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="MEDIAN_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="MEDIAN_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="MEDIAN_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                        <StaticValue datatype="integer" value="7"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="MEDIAN_WIDTH" objLabel="">
                                            <ReferentialPredicate classRef1="MEDIAN_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/38 - SHOULDER_WIDTH_R Must Exist">
                            <Metadata>
                                <Name>38 - SHOULDER_WIDTH_R Must Exist</Name>
                                <Description>SHOULDER_WIDTH_R object must exist for all Sample objects and SHOULDER_TYPE objects with a Value_Numeric of 2,3,4,5,6.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SHOULDER_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="SHOULDER_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="SHOULDER_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                        <StaticValue datatype="integer" value="6"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="SHOULDER_WIDTH_R" objLabel="">
                                            <ReferentialPredicate classRef1="SHOULDER_WIDTH_R" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/39 - SHOULDER_WIDTH_L Must Exist">
                            <Metadata>
                                <Name>39 - SHOULDER_WIDTH_L Must Exist</Name>
                                <Description>SHOULDER_WIDTH_L object must exist for all Sample objects and SHOULDER_TYPE objects with a Value_Numeric of 2,3,4,5,6 and MEDIAN_TYPE objects with a Value_Numeric of 2,3,4,5,6,7.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SHOULDER_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="SHOULDER_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="SHOULDER_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                        <StaticValue datatype="integer" value="6"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="MEDIAN_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="MEDIAN_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="MEDIAN_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                        <StaticValue datatype="integer" value="7"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="SHOULDER_WIDTH_L" objLabel="">
                                            <ReferentialPredicate classRef1="SHOULDER_WIDTH_L" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/40 - PEAK_PARKING Must Exist">
                            <Metadata>
                                <Name>40 - PEAK_PARKING Must Exist</Name>
                                <Description>PEAK_PARKING object must exist for all Sample objects and for all URBAN_CODE objects with a Value_Numeric less than 99999.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                        <LessRelation/>
                                                        <StaticValue datatype="integer" value="99999"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="PEAK_PARKING" objLabel="">
                                            <ReferentialPredicate classRef1="PEAK_PARKING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/43,45,72-75 - CURVES_A-F and GRADES_A-F Must Exist">
                            <Metadata>
                                <Name>43,45,72-75 - CURVES_A-F and GRADES_A-F Must Exist</Name>
                                <Description>CURVES_A-F object and/or GRADES_A-F object must exist for all Sample objects and (for all F_SYSTEM objects with a Value_Numeric of 1,2,3 or (for all F_SYSTEM objects with a Value_Numeric of 4 and for all URBAN_CODE objects with a Value_Numeric of 99999)).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="at least" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="3"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <AndPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                <EqualsRelation/>
                                                                <StaticValue datatype="integer" value="4"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                                <EqualsRelation/>
                                                                <StaticValue datatype="integer" value="99999"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                </AndPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                        <AndPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="GRADES_A" objLabel="">
                                                    <ReferentialPredicate classRef1="GRADES_A" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="GRADES_B" objLabel="">
                                                    <ReferentialPredicate classRef1="GRADES_B" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="GRADES_C" objLabel="">
                                                    <ReferentialPredicate classRef1="GRADES_C" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="GRADES_D" objLabel="">
                                                    <ReferentialPredicate classRef1="GRADES_D" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="GRADES_E" objLabel="">
                                                    <ReferentialPredicate classRef1="GRADES_E" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="GRADES_F" objLabel="">
                                                    <ReferentialPredicate classRef1="GRADES_F" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="CURVES_A" objLabel="">
                                                    <ReferentialPredicate classRef1="CURVES_A" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="CURVES_B" objLabel="">
                                                    <ReferentialPredicate classRef1="CURVES_B" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="CURVES_C" objLabel="">
                                                    <ReferentialPredicate classRef1="CURVES_C" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="CURVES_D" objLabel="">
                                                    <ReferentialPredicate classRef1="CURVES_D" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="CURVES_E" objLabel="">
                                                    <ReferentialPredicate classRef1="CURVES_E" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="CURVES_F" objLabel="">
                                                    <ReferentialPredicate classRef1="CURVES_F" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/44 - TERRAIN_TYPE Must Exist">
                            <Metadata>
                                <Name>44 - TERRAIN_TYPE Must Exist</Name>
                                <Description>TERRAIN_TYPE object must exist for all Sample objects and URBAN_CODE objects with a Value_Numeric of 99999 and F_SYSTEM objects with a Value_Numeric of 1,2,3,4,5.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="99999"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="5"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="TERRAIN_TYPE" objLabel="">
                                            <ReferentialPredicate classRef1="TERRAIN_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/46 - PCT_PASS_SIGHT Must Exist">
                            <Metadata>
                                <Name>46 - PCT_PASS_SIGHT Must Exist</Name>
                                <Description>PCT_PASS_SIGHT object must exist for all Sample objects and for all URBAN_CODE objects with a Value_Numeric of 99999 and for all THROUGH_LANES objects with a Value_Numeric of 2 and for all MEDIAN_TYPE objects with a Value_Numeric of 1,2 and for all SURFACE_TYPE objects with a Value_Numeric greater than 1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="99999"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="THROUGH_LANES" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="THROUGH_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="THROUGH_LANES" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="MEDIAN_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="MEDIAN_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="MEDIAN_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <GreaterRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="PCT_PASS_SIGHT" objLabel="">
                                            <ReferentialPredicate classRef1="PCT_PASS_SIGHT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/47 - IRI Must Exist">
                            <Metadata>
                                <Name>47 - IRI Must Exist</Name>
                                <Description>IRI object's Value_Numeric must exist for all SURFACE_TYPE objects with a Value_Numeric greater than 1 and for all FACILITY_TYPE objects with a Value_Numeric of 1,2 and (for all PSR objects with Value_Text not equal to 'A' and ((for all F_SYSTEM objects with a Value_Numeric of 1,2,3 or for all NHS objects) or (for all Sample objects and for all F_SYSTEM objects with a Value_Numeric of 4 and for all URBAN_CODE objects with a Value_Numeric of 99999)) or (for all DIR_THROUGH_LANES objects with a Value_Numeric greater than 0).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <GreaterRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <OrPredicate>
                                                <AndPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="0" classLabel="PSR" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="PSR" objRef="" propName="Value_Text"/>
                                                                <EqualsRelation/>
                                                                <StaticValue datatype="string" value="A"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <OrPredicate>
                                                        <OrPredicate>
                                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                                <AndPredicate>
                                                                    <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                                        <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                        <StaticValue datatype="integer" value="1"/>
                                                                        <StaticValue datatype="integer" value="3"/>
                                                                    </RangePredicate>
                                                                </AndPredicate>
                                                            </ExistsPredicate>
                                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                                <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            </ExistsPredicate>
                                                        </OrPredicate>
                                                        <AndPredicate>
                                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            </ExistsPredicate>
                                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                                <AndPredicate>
                                                                    <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                    <RelationalPredicate>
                                                                        <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                        <EqualsRelation/>
                                                                        <StaticValue datatype="integer" value="4"/>
                                                                    </RelationalPredicate>
                                                                </AndPredicate>
                                                            </ExistsPredicate>
                                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                                <AndPredicate>
                                                                    <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                    <RelationalPredicate>
                                                                        <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                                        <EqualsRelation/>
                                                                        <StaticValue datatype="integer" value="99999"/>
                                                                    </RelationalPredicate>
                                                                </AndPredicate>
                                                            </ExistsPredicate>
                                                        </AndPredicate>
                                                    </OrPredicate>
                                                </AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="DIR_FACTOR" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="DIR_FACTOR" objRef="" propName="Value_Numeric"/>
                                                            <GreaterRelation/>
                                                            <StaticValue datatype="integer" value="0"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="IRI" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                                    <NotEqualsRelation/>
                                                    <NullValue/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/48(a) - PSR Must Exist (Value_Text equals 'A')">
                            <Metadata>
                                <Name>48(a) - PSR Must Exist (Value_Text equals 'A')</Name>
                                <Description>PSR object's Value_Numeric must exist and PSR object's Value_Text must equal 'A' for all IRI objects with a Value_Numeric of null and for all FACILITY_TYPE objects with a Value_Numeric of 1,2 and for all SURFACE_TYPE objects with a Value_Numeric greater than 1 and (for all F_SYSTEM objects with a Value_Numeric of 1 or for all NHS objects).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="IRI" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <NullValue/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <GreaterRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                            <EqualsRelation/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                    <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="PSR" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="PSR" objRef="" propName="Value_Numeric"/>
                                                    <NotEqualsRelation/>
                                                    <NullValue/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="PSR" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="A"/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/48(b) - PSR Must Exist">
                            <Metadata>
                                <Name>48(b) - PSR Must Exist</Name>
                                <Description>PSR object's Value_Numeric must exist for all IRI objects with a Value_Numeric of null and for all FACILITY_TYPE objects with a Value_Numeric of 1,2 and for all SURFACE_TYPE objects with a Value_Numeric greater than 1 and ((for all F_SYSTEM objects with a Value_Numeric of 4,6 and for all URBAN_CODE objects with a Value_Numeric less than 99999) or (for all F_SYSTEM objects with a Value_Numeric of 5)).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="IRI" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <NullValue/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <GreaterRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <OrPredicate>
                                                <AndPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <OrPredicate>
                                                                <RelationalPredicate>
                                                                    <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                    <EqualsRelation/>
                                                                    <StaticValue datatype="integer" value="4"/>
                                                                </RelationalPredicate>
                                                                <RelationalPredicate>
                                                                    <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                    <EqualsRelation/>
                                                                    <StaticValue datatype="integer" value="6"/>
                                                                </RelationalPredicate>
                                                            </OrPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                                <LessRelation/>
                                                                <StaticValue datatype="integer" value="99999"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                </AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                            <EqualsRelation/>
                                                            <StaticValue datatype="integer" value="5"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="PSR" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="PSR" objRef="" propName="Value_Numeric"/>
                                                    <NotEqualsRelation/>
                                                    <NullValue/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/49 - SURFACE_TYPE Must Exist">
                            <Metadata>
                                <Name>49 - SURFACE_TYPE Must Exist</Name>
                                <Description>SURFACE_TYPE object's Value_Numeric must exist for all FACILITY_TYPE objects with a Value_Numeric of 1,2 and ((for all F_SYSTEM objects with a Value_Numeric of 1 or for all NHS objects or for all Sample objects) or (for all DIR_THROUGH_LANES objects with a Value_Numeric greater than 0 and (for all IRI objects with a Value_Numeric that is not null or for all PSR objects with a Value_Numeric that is not null))).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="at least" n="1" classLabel="DIR_FACTOR" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="DIR_FACTOR" objRef="" propName="Value_Numeric"/>
                                                            <GreaterRelation/>
                                                            <StaticValue datatype="integer" value="0"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="at least" n="1" classLabel="IRI" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                                                <NotEqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="at least" n="1" classLabel="PSR" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="PSR" objRef="" propName="Value_Numeric"/>
                                                                <NotEqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="at least" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="2"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="at least" n="1" classLabel="F_SYSTEM" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                <EqualsRelation/>
                                                                <StaticValue datatype="integer" value="1"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="at least" n="1" classLabel="NHS" objLabel="">
                                                        <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="at least" n="1" classLabel="Sample" objLabel="">
                                                        <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                        </OrPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                    <NotEqualsRelation/>
                                                    <NullValue/>
                                                </RelationalPredicate>
                                                <OrPredicate>
                                                    <ForAllPredicate classLabel="FACILITY_TYPE" objLabel="">
                                                        <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Route_ID"/>
                                                            <EqualsRelation/>
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Route_ID"/>
                                                        </RelationalPredicate>
                                                    </ForAllPredicate>
                                                    <ForAllPredicate classLabel="DIR_FACTOR" objLabel="">
                                                        <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Route_ID"/>
                                                            <EqualsRelation/>
                                                            <DynamicValue classRef="DIR_FACTOR" objRef="" propName="Route_ID"/>
                                                        </RelationalPredicate>
                                                    </ForAllPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                        <OrPredicate>
                                            <ForAllPredicate classLabel="DIR_FACTOR" objLabel="">
                                                <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <NotEqualsRelation/>
                                                            <NullValue/>
                                                        </RelationalPredicate>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Route_ID"/>
                                                            <EqualsRelation/>
                                                            <DynamicValue classRef="DIR_FACTOR" objRef="" propName="Route_ID"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                            </ForAllPredicate>
                                            <ForAllPredicate classLabel="FACILITY_TYPE" objLabel="">
                                                <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <NotEqualsRelation/>
                                                            <NullValue/>
                                                        </RelationalPredicate>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Route_ID"/>
                                                            <EqualsRelation/>
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Route_ID"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                            </ForAllPredicate>
                                        </OrPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/50 - RUTTING Must Exist">
                            <Metadata>
                                <Name>50 - RUTTING Must Exist</Name>
                                <Description>RUTTING object's Value_Numeric must exist for all SURFACE_TYPE objects with a Value_Numeric of 2,6,7,8 and for all FACILITY_TYPE objects with a Value_Numeric of 1,2 and ((for all F_SYSTEM objects with a Value_Numeric of 1 or for all NHS objects or for all Sample objects) or (for all DIR_THROUGH_LANES objects with a Value_Numeric greater than 0 and (for all IRI objects with a Value_Numeric that is not null or for all PSR objects with a Value_Numeric that is not null))).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <OrPredicate>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                                <EqualsRelation/>
                                                                <StaticValue datatype="integer" value="2"/>
                                                            </RelationalPredicate>
                                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                                <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                                <StaticValue datatype="integer" value="6"/>
                                                                <StaticValue datatype="integer" value="8"/>
                                                            </RangePredicate>
                                                        </OrPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="2"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                <EqualsRelation/>
                                                                <StaticValue datatype="integer" value="1"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                        <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                        <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="DIR_FACTOR" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="DIR_FACTOR" objRef="" propName="Value_Numeric"/>
                                                            <GreaterRelation/>
                                                            <StaticValue datatype="integer" value="0"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="IRI" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                                                <NotEqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="PSR" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="PSR" objRef="" propName="Value_Numeric"/>
                                                                <NotEqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                        </OrPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="RUTTING" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="RUTTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="RUTTING" objRef="" propName="Value_Numeric"/>
                                                    <NotEqualsRelation/>
                                                    <NullValue/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/51 - FAULTING Must Exist">
                            <Metadata>
                                <Name>51 - FAULTING Must Exist</Name>
                                <Description>FAULTING object's Value_Numeric must exist for all SURFACE_TYPE objects with a Value_Numeric of 3,1,9,10 and for all FACILITY_TYPE objects with a Value_Numeric of 1,2 and ((for all F_SYSTEM objects with a Value_Numeric of 1 or for all NHS objects or for all Sample objects) or (for all DIR_THROUGH_LANES objects with a Value_Numeric greater than 0 and (for all IRI objects with a Value_Numeric that is not null or for all PSR objects with a Value_Numeric that is not null))).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <OrPredicate>
                                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                                <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                                <StaticValue datatype="integer" value="3"/>
                                                                <StaticValue datatype="integer" value="4"/>
                                                            </RangePredicate>
                                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                                <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                                <StaticValue datatype="integer" value="9"/>
                                                                <StaticValue datatype="integer" value="10"/>
                                                            </RangePredicate>
                                                        </OrPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="2"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                <EqualsRelation/>
                                                                <StaticValue datatype="integer" value="1"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                        <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                        <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="DIR_FACTOR" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="DIR_FACTOR" objRef="" propName="Value_Numeric"/>
                                                            <GreaterRelation/>
                                                            <StaticValue datatype="integer" value="0"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="IRI" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                                                <NotEqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="PSR" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="PSR" objRef="" propName="Value_Numeric"/>
                                                                <NotEqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                        </OrPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="FAULTING" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="FAULTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="FAULTING" objRef="" propName="Value_Numeric"/>
                                                    <NotEqualsRelation/>
                                                    <NullValue/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/52 - CRACKING_PERCENT Must Exsit">
                            <Metadata>
                                <Name>52 - CRACKING_PERCENT Must Exsit</Name>
                                <Description>FAULTING object's Value_Numeric must exist for all SURFACE_TYPE objects with a Value_Numeric of 2,3,4,5,6,7,8,9,10 and for all FACILITY_TYPE objects with a Value_Numeric of 1,2 and ((for all F_SYSTEM objects with a Value_Numeric of 1 or for all NHS objects or for all Sample objects) or (for all DIR_THROUGH_LANES objects with a Value_Numeric greater than 0 and (for all IRI objects with a Value_Numeric that is not null or for all PSR objects with a Value_Numeric that is not null))).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="2"/>
                                                            <StaticValue datatype="integer" value="10"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="2"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                <EqualsRelation/>
                                                                <StaticValue datatype="integer" value="1"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                        <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                        <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="DIR_FACTOR" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="DIR_FACTOR" objRef="" propName="Value_Numeric"/>
                                                            <GreaterRelation/>
                                                            <StaticValue datatype="integer" value="0"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="IRI" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                                                <NotEqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="PSR" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="PSR" objRef="" propName="Value_Numeric"/>
                                                                <NotEqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                        </OrPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Numeric"/>
                                                    <NotEqualsRelation/>
                                                    <NullValue/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/54 - YEAR_LAST_IMPROVEMENT Must Exist">
                            <Metadata>
                                <Name>54 - YEAR_LAST_IMPROVEMENT Must Exist</Name>
                                <Description>YEAR_LAST_IMPROVEMENT object's Value_Date must exist (for all SURFACE-TYPE objects with a Value_Numeric of 2,3,4,5,6,7,8,9,10 and for all Sample objects) or (for all YEAR_LAST_CONSTRUCTION objects with a Value_Date less than the YEAR_LAST_CONSTRUCTION object's Year_Record minus 20).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="2"/>
                                                            <StaticValue datatype="integer" value="10"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                    <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                            </AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="YEAR_LAST_CONSTRUCTION" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="YEAR_LAST_CONSTRUCTION" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <BuiltinFnValue fnName="to_real">
                                                            <BuiltinFnValue fnName="re_search">
                                                                <BuiltinFnValue fnName="to_string">
                                                                    <DynamicValue classRef="YEAR_LAST_CONSTRUCTION" objRef="" propName="Value_Date"/>
                                                                </BuiltinFnValue>
                                                                <StaticValue datatype="string" value="\d\d\d\d"/>
                                                            </BuiltinFnValue>
                                                        </BuiltinFnValue>
                                                        <LessRelation/>
                                                        <DifferenceValue>
                                                            <DynamicValue classRef="YEAR_LAST_CONSTRUCTION" objRef="" propName="Year_Record"/>
                                                            <StaticValue datatype="integer" value="20"/>
                                                        </DifferenceValue>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </OrPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="YEAR_LAST_IMPROVEMENT" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="YEAR_LAST_IMPROVEMENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="YEAR_LAST_IMPROVEMENT" objRef="" propName="Value_Date"/>
                                                    <NotEqualsRelation/>
                                                    <NullValue/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/55 - YEAR_LAST_CONSTRUCTION Must Exist">
                            <Metadata>
                                <Name>55 - YEAR_LAST_CONSTRUCTION Must Exist</Name>
                                <Description>YEAR_LAST_CONSTRUCTION object must exist for all Sample objects and for all SURFACE_TYPE objects with a Value_Numeric of 2,3,4,5,6,7,8,9,10.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                        <StaticValue datatype="integer" value="10"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="YEAR_LAST_CONSTRUCTION" objLabel="">
                                            <ReferentialPredicate classRef1="YEAR_LAST_CONSTRUCTION" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/56 - LAST_OVERLAY_THICKNESS">
                            <Metadata>
                                <Name>56 - LAST_OVERLAY_THICKNESS</Name>
                                <Description>LAST_OVERLAY_THICKNESS object must exist for all Sample objects and for all YEAR_LAST_IMPROV objects.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="YEAR_LAST_IMPROVEMENT" objLabel="">
                                                <ReferentialPredicate classRef1="YEAR_LAST_IMPROVEMENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="LAST_OVERLAY_THICKNESS" objLabel="">
                                            <ReferentialPredicate classRef1="LAST_OVERLAY_THICKNESS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/57 - THICKNESS_RIGID Must Exist">
                            <Metadata>
                                <Name>57 - THICKNESS_RIGID Must Exist</Name>
                                <Description>THICKNESS_RIGID object must exist for all Sample objects and for all SURFACE_TYPE objects with a Value_Numeric of 3,4,5,7,8,9,10.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <OrPredicate>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="3"/>
                                                            <StaticValue datatype="integer" value="5"/>
                                                        </RangePredicate>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="7"/>
                                                            <StaticValue datatype="integer" value="10"/>
                                                        </RangePredicate>
                                                    </OrPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="THICKNESS_RIGID" objLabel="">
                                            <ReferentialPredicate classRef1="THICKNESS_RIGID" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/58 - THICKNESS_FLEXIBLE Must Exist">
                            <Metadata>
                                <Name>58 - THICKNESS_FLEXIBLE Must Exist</Name>
                                <Description>THICKNESS_RIGID object must exist for all Sample objects and for all SURFACE_TYPE objects with a Value_Numeric of 2,6,7,8.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <OrPredicate>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <EqualsRelation/>
                                                            <StaticValue datatype="integer" value="2"/>
                                                        </RelationalPredicate>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <EqualsRelation/>
                                                            <StaticValue datatype="integer" value="6"/>
                                                        </RelationalPredicate>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="7"/>
                                                            <StaticValue datatype="integer" value="8"/>
                                                        </RangePredicate>
                                                    </OrPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="THICKNESS_FLEXIBLE" objLabel="">
                                            <ReferentialPredicate classRef1="THICKNESS_FLEXIBLE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/59 - BASE_TYPE Must Exist">
                            <Metadata>
                                <Name>59 - BASE_TYPE Must Exist</Name>
                                <Description>BASE_TYPE object must exist for all Sample objects and for all SURFACE_TYPE objects with a Value_Numeric greater than 1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <GreaterRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="BASE_TYPE" objLabel="">
                                            <ReferentialPredicate classRef1="BASE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/60 - BASE_THICKNESS Must Exist">
                            <Metadata>
                                <Name>60 - BASE_THICKNESS Must Exist</Name>
                                <Description>BASE_THICKNESS object must exist for all Sample objects and for all SURFACE_TYPE objects with a Value_Numeric greater than 1 and for all BASE_TYPE objects with a Value_Numeric greater than 1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <GreaterRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="BASE_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="BASE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="BASE_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <GreaterRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="BASE_THICKNESS" objLabel="">
                                            <ReferentialPredicate classRef1="BASE_THICKNESS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/63 - COUNTY_CODE Must Exist">
                            <Metadata>
                                <Name>63 - COUNTY_CODE Must Exist</Name>
                                <Description>COUNTY_CODE object must exist for all FACILITY_TYPE objects with a Value_Numeric of 1,2 and ((for all F_SYSTEM objects with a Value_Numeric of 1,2,3,4,5) or (for all F_SYSTEM objects with a Value_Numeric of 6 and for all URBAN_CODE objects with a Value_Numeric less than 99999) or (for all NHS objects)).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="at least" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="at least" n="1" classLabel="F_SYSTEM" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="5"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <AndPredicate>
                                                    <ExistsPredicate qualifier="at least" n="1" classLabel="F_SYSTEM" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                <EqualsRelation/>
                                                                <StaticValue datatype="integer" value="6"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="at least" n="1" classLabel="URBAN_CODE" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                                <LessRelation/>
                                                                <StaticValue datatype="integer" value="99999"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                </AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                    <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                        <ForAllPredicate classLabel="FACILITY_TYPE" objLabel="">
                                            <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="COUNTY_CODE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="COUNTY_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="COUNTY_CODE" objRef="" propName="Route_ID"/>
                                                        <EqualsRelation/>
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Route_ID"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/64 - NHS Must Exist">
                            <Metadata>
                                <Name>64 - NHS Must Exist</Name>
                                <Description>NHS object must exist for all F_SYSTEM objects with a Value_Numeric of 1 and for all FACILITY_TYPE objects with a Value_Numeric of 1,2,6.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <OrPredicate>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="2"/>
                                                        </RangePredicate>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <EqualsRelation/>
                                                            <StaticValue datatype="integer" value="6"/>
                                                        </RelationalPredicate>
                                                    </OrPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                            <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/68 - MAINTENANCE_OPERATIONS Must Exist">
                            <Metadata>
                                <Name>68 - MAINTENANCE_OPERATIONS Must Exist</Name>
                                <Description>MAINTENANCE_OPERATIONS object must exist for all TOLL_CHARGED objects and for all FACILITY_TYPE objects with a Value_Numeric of 1,2 and for all F_SYSTEM objects with a Value_Numeric of 1,2,3,4,5,6,7.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="TOLL_CHARGED" objLabel="">
                                                <ReferentialPredicate classRef1="TOLL_CHARGED" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                        <StaticValue datatype="integer" value="7"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="MAINTENANCE_OPERATIONS" objLabel="">
                                            <ReferentialPredicate classRef1="MAINTENANCE_OPERATIONS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/3 - Inventory Checks/Coverage/70 - DIR_THROUGH_LANES Must Exist">
                            <Metadata>
                                <Name>70 - DIR_THROUGH_LANES Must Exist</Name>
                                <Description>DIR_THROUGH_LANES object must exist for all F_SYSTEM objects with a Value_Numeric of 1 and for all FACILITY_TYPE objects with a Value_Numeric of 6 and (for all IRI objects with a Value_Numeric that is not null or for all PSR objects with a Value_Numeric that is not null).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="6"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="IRI" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                                            <NotEqualsRelation/>
                                                            <NullValue/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="PSR" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="PSR" objRef="" propName="Value_Numeric"/>
                                                            <NotEqualsRelation/>
                                                            <NullValue/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="DIR_FACTOR" objLabel="">
                                            <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                    </RuleFolder>
                </RuleFolder>
                <RuleFolder>
                    <Metadata>
                        <Name>4 - Consistency Checks</Name>
                        <Description/>
                        <Comments>Branch: master
Recent Commits:
</Comments>
                        <Created>
                            <UserDate/>
                        </Created>
                        <LastEdited>
                            <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                        </LastEdited>
                    </Metadata>
                    <IsShortcut>false</IsShortcut>
                    <RuleFolder>
                        <Metadata>
                            <Name>Domains</Name>
                            <Description/>
                            <Comments>Branch: master
Recent Commits:
</Comments>
                            <Created>
                                <UserDate/>
                            </Created>
                            <LastEdited>
                                <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                            </LastEdited>
                        </Metadata>
                        <IsShortcut>false</IsShortcut>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/AADT Domain">
                            <Metadata>
                                <Name>AADT Domain</Name>
                                <Description>AADT objects' Value_Numeric must be a whole number in the range 0-500,000.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="AADT" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="AADT" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="AADT" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="AADT" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="0"/>
                                            <StaticValue datatype="integer" value="500000"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/AADT_COMBINATION Domain">
                            <Metadata>
                                <Name>AADT_COMBINATION Domain</Name>
                                <Description>AADT_COMBINATION objects' Value_Numeric must be a whole number greater than 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="AADT_COMBINATION" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="AADT_COMBINATION" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="AADT_COMBINATION" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="AADT_COMBINATION" objRef="" propName="Value_Numeric"/>
                                            <GreaterRelation/>
                                            <StaticValue datatype="integer" value="0"/>
                                        </RelationalPredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/AADT_SINGLE_UNIT Domain">
                            <Metadata>
                                <Name>AADT_SINGLE_UNIT Domain</Name>
                                <Description>AADT_SINGLE_UNIT objects' Value_Numeric must be a whole number greater than 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="AADT_SINGLE_UNIT" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="AADT_SINGLE_UNIT" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="AADT_SINGLE_UNIT" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="AADT_SINGLE_UNIT" objRef="" propName="Value_Numeric"/>
                                            <GreaterRelation/>
                                            <StaticValue datatype="integer" value="0"/>
                                        </RelationalPredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/ACCESS_CONTROL Domain">
                            <Metadata>
                                <Name>ACCESS_CONTROL Domain</Name>
                                <Description>ACCESS_CONTROL objects' Value_Numeric must be a whole number in the range 1-3.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="ACCESS_CONTROL" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="ACCESS_CONTROL" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="ACCESS_CONTROL" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="ACCESS_CONTROL" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="3"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/AT_GRADE_OTHER">
                            <Metadata>
                                <Name>AT_GRADE_OTHER</Name>
                                <Description>AT_GRADE_OTHER objects' Value_Numeric must be a whole number in the range 0-25.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="AT_GRADE_OTHER" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="AT_GRADE_OTHER" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="AT_GRADE_OTHER" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="AT_GRADE_OTHER" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="0"/>
                                            <StaticValue datatype="integer" value="25"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/BASE_THICKNESS Domain">
                            <Metadata>
                                <Name>BASE_THICKNESS Domain</Name>
                                <Description>BASE_THICKNESS objects' Value_Numeric must be greater than 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="BASE_THICKNESS" objLabel="">
                                    <RelationalPredicate>
                                        <DynamicValue classRef="BASE_THICKNESS" objRef="" propName="Value_Numeric"/>
                                        <GreaterRelation/>
                                        <StaticValue datatype="integer" value="0"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/BASE_TYPE Domain">
                            <Metadata>
                                <Name>BASE_TYPE Domain</Name>
                                <Description>BASE_TYPE objects' Value_Numeric must be a whole number in the range 1-8.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="BASE_TYPE" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="BASE_TYPE" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="BASE_TYPE" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="BASE_TYPE" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="8"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/COUNTER_PEAK_LANES Domain">
                            <Metadata>
                                <Name>COUNTER_PEAK_LANES Domain</Name>
                                <Description>COUNTER_PEAK_LANES objects' Value_Numeric must be a whole number greater than 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="COUNTER_PEAK_LANES" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="COUNTER_PEAK_LANES" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="COUNTER_PEAK_LANES" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="COUNTER_PEAK_LANES" objRef="" propName="Value_Numeric"/>
                                            <GreaterRelation/>
                                            <StaticValue datatype="integer" value="0"/>
                                        </RelationalPredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/COUNTY_CODE Domain">
                            <Metadata>
                                <Name>COUNTY_CODE Domain</Name>
                                <Description>COUNTY_CODE objects' Value_Numeric must be a whole number in the range 1-999.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="COUNTY_CODE" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="COUNTY_CODE" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="COUNTY_CODE" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="COUNTY_CODE" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="999"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/CRACKING Domain">
                            <Metadata>
                                <Name>CRACKING Domain</Name>
                                <Description>CRACKING_PERCENT objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="CRACKING_PERCENT" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="integer" value="0"/>
                                        <StaticValue datatype="integer" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/CURVES_A Domain">
                            <Metadata>
                                <Name>CURVES_A Domain</Name>
                                <Description>CURVES_A objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="CURVES_A" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="CURVES_A" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/CURVES_B Domain">
                            <Metadata>
                                <Name>CURVES_B Domain</Name>
                                <Description>CURVES_B objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="CURVES_B" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="CURVES_B" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/CURVES_C Domain">
                            <Metadata>
                                <Name>CURVES_C Domain</Name>
                                <Description>CURVES_C objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="CURVES_C" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="CURVES_C" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/CURVES_D Domain">
                            <Metadata>
                                <Name>CURVES_D Domain</Name>
                                <Description>CURVES_D objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="CURVES_D" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="CURVES_D" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/CURVES_E Domain">
                            <Metadata>
                                <Name>CURVES_E Domain</Name>
                                <Description>CURVES_E objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="CURVES_E" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="CURVES_E" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/CURVES_F Domain">
                            <Metadata>
                                <Name>CURVES_F Domain</Name>
                                <Description>CURVES_F objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="CURVES_F" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="CURVES_F" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/DIR_FACTOR Domain">
                            <Metadata>
                                <Name>DIR_FACTOR Domain</Name>
                                <Description>DIR_FACTOR objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="DIR_FACTOR" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="DIR_FACTOR" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/FACILITY_TYPE Domain">
                            <Metadata>
                                <Name>FACILITY_TYPE Domain</Name>
                                <Description>FACILITY_TYPE objects' Value_Numeric must be a whole number in the range 1-7 and not equal to 3.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="FACILITY_TYPE" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="7"/>
                                        </RangePredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                            <NotEqualsRelation/>
                                            <StaticValue datatype="integer" value="3"/>
                                        </RelationalPredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/FAULTING Domain">
                            <Metadata>
                                <Name>FAULTING Domain</Name>
                                <Description>FAULTING objects' Value_Numeric must be greater than or equal to 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="FAULTING" objLabel="">
                                    <RelationalPredicate>
                                        <DynamicValue classRef="FAULTING" objRef="" propName="Value_Numeric"/>
                                        <GreaterEqualsRelation/>
                                        <StaticValue datatype="integer" value="0"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/FUTURE_AADT Domain">
                            <Metadata>
                                <Name>FUTURE_AADT Domain</Name>
                                <Description>FUTURE_AADT objects' Value_Numeric must be a whole number greater than 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="FUTURE_AADT" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="FUTURE_AADT" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="FUTURE_AADT" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="FUTURE_AADT" objRef="" propName="Value_Numeric"/>
                                            <GreaterRelation/>
                                            <StaticValue datatype="integer" value="0"/>
                                        </RelationalPredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/F_SYSTEM Domain">
                            <Metadata>
                                <Name>F_SYSTEM Domain</Name>
                                <Description>F_SYSTEM objects' Value_Numeric must be a whole number in the range 1-7.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="F_SYSTEM" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="7"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/GRADES_A">
                            <Metadata>
                                <Name>GRADES_A</Name>
                                <Description>GRADES_A objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="GRADES_A" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="GRADES_A" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/GRADES_B">
                            <Metadata>
                                <Name>GRADES_B</Name>
                                <Description>GRADES_B objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="GRADES_B" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="GRADES_B" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/GRADES_C">
                            <Metadata>
                                <Name>GRADES_C</Name>
                                <Description>GRADES_B objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="GRADES_C" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="GRADES_C" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/GRADES_D">
                            <Metadata>
                                <Name>GRADES_D</Name>
                                <Description>GRADES_D objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="GRADES_D" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="GRADES_D" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/GRADES_E">
                            <Metadata>
                                <Name>GRADES_E</Name>
                                <Description>GRADES_E objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="GRADES_E" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="GRADES_E" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/GRADES_F">
                            <Metadata>
                                <Name>GRADES_F</Name>
                                <Description>GRADES_B objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="GRADES_F" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="GRADES_F" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/HOV_LANES Domain">
                            <Metadata>
                                <Name>HOV_LANES Domain</Name>
                                <Description>HOV_LANES objects' Value_Numeric must be in the range 0-1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="HOV_LANES" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="HOV_LANES" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="integer" value="0"/>
                                        <StaticValue datatype="integer" value="1"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/HOV_TYPE Domain">
                            <Metadata>
                                <Name>HOV_TYPE Domain</Name>
                                <Description>HOV_TYPE objects' Value_Numeric must be in the range 0-1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="HOV_TYPE" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="HOV_TYPE" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="integer" value="0"/>
                                        <StaticValue datatype="integer" value="1"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/IRI Domain">
                            <Metadata>
                                <Name>IRI Domain</Name>
                                <Description>IRI objects' Value_Numeric must be a whole number in the range 30-300.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="IRI" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="30"/>
                                            <StaticValue datatype="integer" value="300"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/K_FACTOR Domain">
                            <Metadata>
                                <Name>K_FACTOR Domain</Name>
                                <Description>K_FACTOR objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="K_FACTOR" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="K_FACTOR" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/LANE_WIDTH">
                            <Metadata>
                                <Name>LANE_WIDTH</Name>
                                <Description>LANE_WIDTH objects' Value_Numeric must be a whole number in the range 6-20.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="LANE_WIDTH" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="6"/>
                                            <StaticValue datatype="integer" value="20"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/LAST_OVERLAY_THICKNESS">
                            <Metadata>
                                <Name>LAST_OVERLAY_THICKNESS</Name>
                                <Description>LAST_OVERLAY_THICKNESS objects' Value_Numeric must be equal to 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="LAST_OVERLAY_THICKNESS" objLabel="">
                                    <RelationalPredicate>
                                        <DynamicValue classRef="LAST_OVERLAY_THICKNESS" objRef="" propName="Value_Numeric"/>
                                        <EqualsRelation/>
                                        <StaticValue datatype="integer" value="0"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/MEDIAN_TYPE Domain">
                            <Metadata>
                                <Name>MEDIAN_TYPE Domain</Name>
                                <Description>MEDIAN_TYPE objects' Value_Numeric must be a whole number in the range 1-7.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="MEDIAN_TYPE" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="MEDIAN_TYPE" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="MEDIAN_TYPE" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="MEDIAN_TYPE" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="7"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/NHS Domain">
                            <Metadata>
                                <Name>NHS Domain</Name>
                                <Description>NHS objects' Value_Numeric must be a whole number in the range 1-9.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="NHS" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="NHS" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="NHS" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="NHS" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="9"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/OWNERSHIP Domain">
                            <Metadata>
                                <Name>OWNERSHIP Domain</Name>
                                <Description>OWNERSHIP objects' Value_Numeric must be equal to: 1-4, 11-12, 21, 25-27, 31-32, 40, 60, 62-64, 66-70, 72-74, or 80.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="OWNERSHIP" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="OWNERSHIP" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="OWNERSHIP" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <OrPredicate>
                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                <DynamicValue classRef="OWNERSHIP" objRef="" propName="Value_Numeric"/>
                                                <StaticValue datatype="integer" value="1"/>
                                                <StaticValue datatype="integer" value="4"/>
                                            </RangePredicate>
                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                <DynamicValue classRef="OWNERSHIP" objRef="" propName="Value_Numeric"/>
                                                <StaticValue datatype="integer" value="11"/>
                                                <StaticValue datatype="integer" value="12"/>
                                            </RangePredicate>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="OWNERSHIP" objRef="" propName="Value_Numeric"/>
                                                <EqualsRelation/>
                                                <StaticValue datatype="integer" value="21"/>
                                            </RelationalPredicate>
                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                <DynamicValue classRef="OWNERSHIP" objRef="" propName="Value_Numeric"/>
                                                <StaticValue datatype="integer" value="25"/>
                                                <StaticValue datatype="integer" value="27"/>
                                            </RangePredicate>
                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                <DynamicValue classRef="OWNERSHIP" objRef="" propName="Value_Numeric"/>
                                                <StaticValue datatype="integer" value="31"/>
                                                <StaticValue datatype="integer" value="32"/>
                                            </RangePredicate>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="OWNERSHIP" objRef="" propName="Value_Numeric"/>
                                                <EqualsRelation/>
                                                <StaticValue datatype="integer" value="40"/>
                                            </RelationalPredicate>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="OWNERSHIP" objRef="" propName="Value_Numeric"/>
                                                <EqualsRelation/>
                                                <StaticValue datatype="integer" value="60"/>
                                            </RelationalPredicate>
                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                <DynamicValue classRef="OWNERSHIP" objRef="" propName="Value_Numeric"/>
                                                <StaticValue datatype="integer" value="66"/>
                                                <StaticValue datatype="integer" value="70"/>
                                            </RangePredicate>
                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                <DynamicValue classRef="OWNERSHIP" objRef="" propName="Value_Numeric"/>
                                                <StaticValue datatype="integer" value="72"/>
                                                <StaticValue datatype="integer" value="74"/>
                                            </RangePredicate>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="OWNERSHIP" objRef="" propName="Value_Numeric"/>
                                                <EqualsRelation/>
                                                <StaticValue datatype="integer" value="80"/>
                                            </RelationalPredicate>
                                        </OrPredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/PCT_GREEN_TIME">
                            <Metadata>
                                <Name>PCT_GREEN_TIME</Name>
                                <Description>PCT_GREEN_TIME objects' Value_Numeric must be in the range 1-99.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="PCT_GREEN_TIME" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="PCT_GREEN_TIME" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="1"/>
                                        <StaticValue datatype="real" value="99"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/PCT_PASSING_SIGHT_DISTANCE">
                            <Metadata>
                                <Name>PCT_PASSING_SIGHT_DISTANCE</Name>
                                <Description>PCT_PASS_SIGHT objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="PCT_PASS_SIGHT" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="PCT_PASS_SIGHT" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/PCT_PEAK_COMBINATION Domain">
                            <Metadata>
                                <Name>PCT_PEAK_COMBINATION Domain</Name>
                                <Description>PCT_PEAK_COMBINATION objects' Value_Numeric must be in the range 0-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="PCT_PEAK_COMBINATION" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="PCT_PEAK_COMBINATION" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="100"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/PCT_PEAK_SINGLE Domain">
                            <Metadata>
                                <Name>PCT_PEAK_SINGLE Domain</Name>
                                <Description>PCT_PEAK_SINGLE_UNIT objects' Value_Numeric must be in the range 0-50.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="PCT_PEAK_SINGLE_UNIT" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="PCT_PEAK_SINGLE_UNIT" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="integer" value="50"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/PEAK_LANES Domain">
                            <Metadata>
                                <Name>PEAK_LANES Domain</Name>
                                <Description>PEAK_LANES objects' Value_Numeric must be a whole number greater than 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="PEAK_LANES" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="PEAK_LANES" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="PEAK_LANES" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="PEAK_LANES" objRef="" propName="Value_Numeric"/>
                                            <GreaterRelation/>
                                            <StaticValue datatype="integer" value="0"/>
                                        </RelationalPredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/PEAK_PARKING Domain">
                            <Metadata>
                                <Name>PEAK_PARKING Domain</Name>
                                <Description>PEAK_PARKING objects' Begin_Point must be a whole number and their Value_Numeric must be in the range 1-3.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="PEAK_PARKING" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="PEAK_PARKING" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="PEAK_PARKING" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="PEAK_PARKING" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="3"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/PSR Domain">
                            <Metadata>
                                <Name>PSR Domain</Name>
                                <Description>PSR objects' Value_Numeric must be in the range 0-0.1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="PSR" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="PSR" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="real" value="0"/>
                                        <StaticValue datatype="real" value="0.1"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/ROUTE_NUMBER">
                            <Metadata>
                                <Name>ROUTE_NUMBER</Name>
                                <Description>ROUTE_NUMBER objects' Value_Numeric must be a whole number greater than 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="ROUTE_NUMBER" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="ROUTE_NUMBER" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="ROUTE_NUMBER" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="ROUTE_NUMBER" objRef="" propName="Value_Numeric"/>
                                            <GreaterRelation/>
                                            <StaticValue datatype="integer" value="0"/>
                                        </RelationalPredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/ROUTE_QUALIFIER">
                            <Metadata>
                                <Name>ROUTE_QUALIFIER</Name>
                                <Description>ROUTE_QUALIFIER objects' Value_Numeric must be a whole number in the range 1-10.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="ROUTE_QUALIFIER" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="ROUTE_QUALIFIER" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="ROUTE_QUALIFIER" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="ROUTE_QUALIFIER" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="10"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/ROUTE_SIGNING Domain">
                            <Metadata>
                                <Name>ROUTE_SIGNING Domain</Name>
                                <Description>ROUTE_SIGNING objects' Value_Numeric must be a whole number in the range 1-10.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="ROUTE_SIGNING" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="ROUTE_SIGNING" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="ROUTE_SIGNING" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="ROUTE_SIGNING" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="10"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/RUTTING Domain">
                            <Metadata>
                                <Name>RUTTING Domain</Name>
                                <Description>RUTTING objects' Value_Numeric must be less than or equal to 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="RUTTING" objLabel="">
                                    <RelationalPredicate>
                                        <DynamicValue classRef="RUTTING" objRef="" propName="Value_Numeric"/>
                                        <LessEqualsRelation/>
                                        <StaticValue datatype="integer" value="0"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/SHOULDER_TYPE Domain">
                            <Metadata>
                                <Name>SHOULDER_TYPE Domain</Name>
                                <Description>SHOULDER_TYPE objects' Value_Numeric must be a whole number in the range 1-7.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="SHOULDER_TYPE" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="SHOULDER_TYPE" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="SHOULDER_TYPE" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="SHOULDER_TYPE" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="7"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/SHOULDER_WIDTH_L Domain">
                            <Metadata>
                                <Name>SHOULDER_WIDTH_L Domain</Name>
                                <Description>SHOULDER_WIDTH_L objects' Begin_Point must be a whole number and their Value_Numeric must be in the range 6-20.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="SHOULDER_WIDTH_L" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="SHOULDER_WIDTH_L" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="SHOULDER_WIDTH_L" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="SHOULDER_WIDTH_L" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="6"/>
                                            <StaticValue datatype="integer" value="20"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/SHOULDER_WIDTH_R Domain">
                            <Metadata>
                                <Name>SHOULDER_WIDTH_R Domain</Name>
                                <Description>SHOULDER_WIDTH_R objects' Begin_Point must be a whole number and their Value_Numeric must be in the range 6-20.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="SHOULDER_WIDTH_R" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="SHOULDER_WIDTH_R" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="SHOULDER_WIDTH_R" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="SHOULDER_WIDTH_R" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="6"/>
                                            <StaticValue datatype="integer" value="20"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/SIGNALS Domain">
                            <Metadata>
                                <Name>SIGNALS Domain</Name>
                                <Description>NUMBER_SIGNALS objects' Value_Numeric must be a whole number in the range 0-25.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="NUMBER_SIGNALS" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="NUMBER_SIGNALS" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="NUMBER_SIGNALS" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="NUMBER_SIGNALS" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="0"/>
                                            <StaticValue datatype="integer" value="25"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/SIGNAL_TYPE Domain">
                            <Metadata>
                                <Name>SIGNAL_TYPE Domain</Name>
                                <Description>SIGNAL_TYPE objects' Value_Numeric must be a whole number in the range 1-5.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="SIGNAL_TYPE" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="SIGNAL_TYPE" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="SIGNAL_TYPE" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="SIGNAL_TYPE" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="5"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/SPEED_LIMIT Domain">
                            <Metadata>
                                <Name>SPEED_LIMIT Domain</Name>
                                <Description>SPEED_LIMIT objects' Value_Numeric must be a whole number in the range 5-100.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="SPEED_LIMIT" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="SPEED_LIMIT" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="SPEED_LIMIT" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="SPEED_LIMIT" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="5"/>
                                            <StaticValue datatype="integer" value="100"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/STOP_SIGNS Domain">
                            <Metadata>
                                <Name>STOP_SIGNS Domain</Name>
                                <Description>STOP_SIGNS objects' Value_Numeric must be a whole number in the range 0-25.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:27.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="STOP_SIGNS" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="STOP_SIGNS" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="STOP_SIGNS" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="STOP_SIGNS" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="0"/>
                                            <StaticValue datatype="integer" value="25"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/SURFACE_TYPE Domain">
                            <Metadata>
                                <Name>SURFACE_TYPE Domain</Name>
                                <Description>SURFACE_TYPE objects' Value_Numeric must be a whole number in the range 1-11.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="STRUCTURE_TYPE" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="STRUCTURE_TYPE" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="STRUCTURE_TYPE" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="STRUCTURE_TYPE" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="11"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/TERRAIN_TYPE Domain">
                            <Metadata>
                                <Name>TERRAIN_TYPE Domain</Name>
                                <Description>TERRAIN_TYPE objects' Value_Numeric must be a whole number in the range 1-3.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="TERRAIN_TYPE" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="TERRAIN_TYPE" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="TERRAIN_TYPE" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="TERRAIN_TYPE" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="3"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/THICKNESS_FLEXIBLE Domain">
                            <Metadata>
                                <Name>THICKNESS_FLEXIBLE Domain</Name>
                                <Description>THICKNESS_FLEXIBLE objects' Value_Numeric must be greater than or equal to 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="THICKNESS_FLEXIBLE" objLabel="">
                                    <RelationalPredicate>
                                        <DynamicValue classRef="THICKNESS_FLEXIBLE" objRef="" propName="Value_Numeric"/>
                                        <GreaterEqualsRelation/>
                                        <StaticValue datatype="integer" value="0"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/THICKNESS_RIGID Domain">
                            <Metadata>
                                <Name>THICKNESS_RIGID Domain</Name>
                                <Description>THICKNESS_RIGID objects' Value_Numeric must be greater than or equal to 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="THICKNESS_RIGID" objLabel="">
                                    <RelationalPredicate>
                                        <DynamicValue classRef="THICKNESS_RIGID" objRef="" propName="Value_Numeric"/>
                                        <GreaterEqualsRelation/>
                                        <StaticValue datatype="integer" value="0"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/THROUGH_LANES Domain">
                            <Metadata>
                                <Name>THROUGH_LANES Domain</Name>
                                <Description>THROUGH_LANES objects' Value_Numeric must be a whole number greater than 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="THROUGH_LANES" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="THROUGH_LANES" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="THROUGH_LANES" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="THROUGH_LANES" objRef="" propName="Value_Numeric"/>
                                            <GreaterRelation/>
                                            <StaticValue datatype="integer" value="0"/>
                                        </RelationalPredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/TOLL_CHARGED Domain">
                            <Metadata>
                                <Name>TOLL_CHARGED Domain</Name>
                                <Description>TOLL_CHARGED objects' Value_Numeric must be in the range 0-1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="TOLL_CHARGED" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="TOLL_CHARGED" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="integer" value="0"/>
                                        <StaticValue datatype="integer" value="1"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/TOLL_LANES Domain">
                            <Metadata>
                                <Name>TOLL_LANES Domain</Name>
                                <Description>Check against the THROUGH_LANES domain check - can/should these be combined?</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="TOLL_LANES" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="TOLL_LANES" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="integer" value="0"/>
                                        <StaticValue datatype="integer" value="1"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/TURN_LANES_L">
                            <Metadata>
                                <Name>TURN_LANES_L</Name>
                                <Description>TURN_LANES_L objects' Begin_Point must be a whole number and their Value_Numeric must be in the range 0-6.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="TURN_LANES_L" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="TURN_LANES_L" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="TURN_LANES_L" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="TURN_LANES_L" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="0"/>
                                            <StaticValue datatype="integer" value="6"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/TURN_LANES_R">
                            <Metadata>
                                <Name>TURN_LANES_R</Name>
                                <Description>TURN_LANES_R objects' Begin_Point must be a whole number and their Value_Numeric must be in the range 0-6.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="TURN_LANES_R" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="TURN_LANES_R" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="TURN_LANES_R" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="TURN_LANES_R" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="0"/>
                                            <StaticValue datatype="integer" value="6"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/URBAN_CODE Domain">
                            <Metadata>
                                <Name>URBAN_CODE Domain</Name>
                                <Description>URBAN_CODE objects' Value_Numeric must be a whole number in the range 1-99999.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="URBAN_CODE" objLabel="">
                                    <AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <BuiltinFnValue fnName="floor">
                                                <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                            </BuiltinFnValue>
                                        </RelationalPredicate>
                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                            <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                            <StaticValue datatype="integer" value="1"/>
                                            <StaticValue datatype="integer" value="99999"/>
                                        </RangePredicate>
                                    </AndPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/WIDENING_OBSTACLE Domain">
                            <Metadata>
                                <Name>WIDENING_OBSTACLE Domain</Name>
                                <Description>WIDENING_OBSTACLE objects' Value_Text must either (contain A, B, C, D, E, F, G ) or (equal X).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="WIDENING_OBSTACLE" objLabel="">
                                    <OrPredicate>
                                        <AndPredicate>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                <EqualsRelation/>
                                                <StaticValue datatype="string" value="X"/>
                                            </RelationalPredicate>
                                            <RelationalPredicate>
                                                <BuiltinFnValue fnName="length">
                                                    <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                </BuiltinFnValue>
                                                <EqualsRelation/>
                                                <StaticValue datatype="integer" value="1"/>
                                            </RelationalPredicate>
                                        </AndPredicate>
                                        <AndPredicate>
                                            <NotPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                    <ContainsRelation/>
                                                    <StaticValue datatype="string" value="X"/>
                                                </RelationalPredicate>
                                            </NotPredicate>
                                            <OrPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                    <ContainsRelation/>
                                                    <StaticValue datatype="string" value="A"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                    <ContainsRelation/>
                                                    <StaticValue datatype="string" value="B"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                    <ContainsRelation/>
                                                    <StaticValue datatype="string" value="C"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                    <ContainsRelation/>
                                                    <StaticValue datatype="string" value="D"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                    <ContainsRelation/>
                                                    <StaticValue datatype="string" value="E"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                    <ContainsRelation/>
                                                    <StaticValue datatype="string" value="F"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                    <ContainsRelation/>
                                                    <StaticValue datatype="string" value="G"/>
                                                </RelationalPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                    </OrPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/WIDENING_POTENTIAL Domain">
                            <Metadata>
                                <Name>WIDENING_POTENTIAL Domain</Name>
                                <Description>WIDENING_POTENTIAL objects' Value_Numeric must be in the range 0-9.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="WIDENING_POTENTIAL" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="WIDENING_POTENTIAL" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="integer" value="0"/>
                                        <StaticValue datatype="integer" value="9"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/YEAR_LAST_CONSTRUCTION">
                            <Metadata>
                                <Name>YEAR_LAST_CONSTRUCTION</Name>
                                <Description>YEAR_LAST_CONSTRUCTION objects' Value_Date must be less than or equal to its Year_Record.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="YEAR_LAST_CONSTRUCTION" objLabel="">
                                    <RelationalPredicate>
                                        <BuiltinFnValue fnName="to_real">
                                            <BuiltinFnValue fnName="re_search">
                                                <BuiltinFnValue fnName="to_string">
                                                    <DynamicValue classRef="YEAR_LAST_CONSTRUCTION" objRef="" propName="Value_Date"/>
                                                </BuiltinFnValue>
                                                <StaticValue datatype="string" value="\d\d\d\d"/>
                                            </BuiltinFnValue>
                                        </BuiltinFnValue>
                                        <LessEqualsRelation/>
                                        <DynamicValue classRef="YEAR_LAST_CONSTRUCTION" objRef="" propName="Year_Record"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/4 - Consistency Checks/Domains/YEAR_LAST_IMPROVEMENT">
                            <Metadata>
                                <Name>YEAR_LAST_IMPROVEMENT</Name>
                                <Description>YEAR_LAST_IMPROVEMENT objects' Value_Date must be less than or equal to its Year_Record.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="YEAR_LAST_IMPROVEMENT" objLabel="">
                                    <RelationalPredicate>
                                        <BuiltinFnValue fnName="to_real">
                                            <BuiltinFnValue fnName="re_search">
                                                <BuiltinFnValue fnName="to_string">
                                                    <DynamicValue classRef="YEAR_LAST_IMPROVEMENT" objRef="" propName="Value_Date"/>
                                                </BuiltinFnValue>
                                                <StaticValue datatype="string" value="\d\d\d\d"/>
                                            </BuiltinFnValue>
                                        </BuiltinFnValue>
                                        <LessEqualsRelation/>
                                        <DynamicValue classRef="YEAR_LAST_IMPROVEMENT" objRef="" propName="Year_Record"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                    </RuleFolder>
                </RuleFolder>
                <RuleFolder>
                    <Metadata>
                        <Name>5 - HPMS Validations</Name>
                        <Description/>
                        <Comments>Branch: master
Recent Commits:
</Comments>
                        <Created>
                            <UserDate/>
                        </Created>
                        <LastEdited>
                            <UserDate date="2020-01-02T00:19:29.000Z" user="1Spatial"/>
                        </LastEdited>
                    </Metadata>
                    <IsShortcut>false</IsShortcut>
                    <RuleFolder>
                        <Metadata>
                            <Name>Connectivity</Name>
                            <Description/>
                            <Comments>Branch: master
Recent Commits:
</Comments>
                            <Created>
                                <UserDate/>
                            </Created>
                            <LastEdited>
                                <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                            </LastEdited>
                        </Metadata>
                        <IsShortcut>false</IsShortcut>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Connectivity/DRAFT - Check INTERSTATE Network for Islands">
                            <Metadata>
                                <Name>DRAFT - Check INTERSTATE Network for Islands</Name>
                                <Description/>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:connectivity_network" objLabel="">
                                    <ConditionalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="sys:connectivity_network" objRef="" propName="sys:name"/>
                                            <EqualsRelation/>
                                            <StaticValue datatype="string" value="interstate network"/>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="sys:connectivity_network" objRef="" propName="sys:num_islands"/>
                                            <EqualsRelation/>
                                            <StaticValue datatype="integer" value="1"/>
                                        </RelationalPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Connectivity/DRAFT - Check for invalid INTERSTATE intersections">
                            <Metadata>
                                <Name>DRAFT - Check for invalid INTERSTATE intersections</Name>
                                <Description/>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="INTERSTATE" objLabel="">
                                    <ForAllPredicate classLabel="" objLabel="intersecting">
                                        <AndPredicate>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="" objRef="intersecting" propName="geometry"/>
                                                <SpatialIntersectsRelation/>
                                                <DynamicValue classRef="INTERSTATE" objRef="" propName="geometry"/>
                                            </RelationalPredicate>
                                            <RelationalPredicate>
                                                <BuiltinFnValue fnName="ends_of">
                                                    <DynamicValue classRef="" objRef="intersecting" propName="geometry"/>
                                                </BuiltinFnValue>
                                                <SpatialIntersectsRelation/>
                                                <DynamicValue classRef="INTERSTATE" objRef="" propName="geometry"/>
                                            </RelationalPredicate>
                                        </AndPredicate>
                                        <OrPredicate>
                                            <RelationalPredicate>
                                                <ClassValue classRef="" objRef="intersecting"/>
                                                <EqualsRelation/>
                                                <StaticValue datatype="string" value="INTERSTATE"/>
                                            </RelationalPredicate>
                                            <AndPredicate>
                                                <RelationalPredicate>
                                                    <ClassValue classRef="" objRef="intersecting"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="F_SYSTEM"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="" objRef="intersecting" propName="Value_Numeric"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="integer" value="1"/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </OrPredicate>
                                    </ForAllPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Connectivity/DRAFT - Check that ramps connect to INTERSTATE">
                            <Metadata>
                                <Name>DRAFT - Check that ramps connect to INTERSTATE</Name>
                                <Description/>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="F_SYSTEM" objLabel="">
                                    <ConditionalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <StaticValue datatype="integer" value="1"/>
                                        </RelationalPredicate>
                                        <ExistsPredicate qualifier="at least" n="1" classLabel="INTERSTATE" objLabel="">
                                            <RelationalPredicate>
                                                <DynamicValue classRef="INTERSTATE" objRef="" propName="geometry"/>
                                                <SpatialIntersectsRelation/>
                                                <BuiltinFnValue fnName="ends_of">
                                                    <DynamicValue classRef="F_SYSTEM" objRef="" propName="geometry"/>
                                                </BuiltinFnValue>
                                            </RelationalPredicate>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                    </RuleFolder>
                    <RuleFolder>
                        <Metadata>
                            <Name>Cross, LRS, Sample, Length</Name>
                            <Description/>
                            <Comments>Branch: master
Recent Commits:
</Comments>
                            <Created>
                                <UserDate/>
                            </Created>
                            <LastEdited>
                                <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                            </LastEdited>
                        </Metadata>
                        <IsShortcut>false</IsShortcut>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/01 - IRI (Cross)">
                            <Metadata>
                                <Name>01 - IRI (Cross)</Name>
                                <Description>IRI objects must have a Value_Numeric greater than or equal to 30 and less than or equal to 400.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="IRI" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="integer" value="30"/>
                                        <StaticValue datatype="integer" value="400"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/01 - IRI (Length)">
                            <Metadata>
                                <Name>01 - IRI (Length)</Name>
                                <Description>IRI objects must not have a LENGTH greater than 0.11 miles.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="IRI" objLabel="">
                                    <RelationalPredicate>
                                        <BuiltinFnValue fnName="line_length">
                                            <DynamicValue classRef="IRI" objRef="" propName="geometry"/>
                                        </BuiltinFnValue>
                                        <LessEqualsRelation/>
                                        <StaticValue datatype="real" value="0.11"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/02 - Samples are Invalid on Ramps (Sample)">
                            <Metadata>
                                <Name>02 - Samples are Invalid on Ramps (Sample)</Name>
                                <Description>Sample objects may only exist for FACILITY_TYPE objects with a Value_Numeric of 1,2 and (for F_SYSTEM objects with a Value_Numeric of 1,2,3,4,5) or (for F_SYSTEM objects with a Value_Numeric of 6 and for URBAN_CODE objects with a Value_Numeric less than 99999).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <NotPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="at least" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="2"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="at least" n="1" classLabel="F_SYSTEM" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                <StaticValue datatype="integer" value="1"/>
                                                                <StaticValue datatype="integer" value="5"/>
                                                            </RangePredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <AndPredicate>
                                                        <ExistsPredicate qualifier="at least" n="1" classLabel="F_SYSTEM" objLabel="">
                                                            <AndPredicate>
                                                                <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                <RelationalPredicate>
                                                                    <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                    <EqualsRelation/>
                                                                    <StaticValue datatype="integer" value="6"/>
                                                                </RelationalPredicate>
                                                            </AndPredicate>
                                                        </ExistsPredicate>
                                                        <ExistsPredicate qualifier="at least" n="1" classLabel="URBAN_CODE" objLabel="">
                                                            <AndPredicate>
                                                                <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                <RelationalPredicate>
                                                                    <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                                    <LessRelation/>
                                                                    <StaticValue datatype="integer" value="99999"/>
                                                                </RelationalPredicate>
                                                            </AndPredicate>
                                                        </ExistsPredicate>
                                                    </AndPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                        </NotPredicate>
                                        <ExistsPredicate qualifier="exactly" n="0" classLabel="Sample" objLabel="">
                                            <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/09 - YEAR_LAST_CONSTRUCTION (Cross)">
                            <Metadata>
                                <Name>09 - YEAR_LAST_CONSTRUCTION (Cross)</Name>
                                <Description>YEAR_LAST_CONSTRUCTION object's Value_Numeric must be less than or equal to its Year_Record or Null.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="YEAR_LAST_CONSTRUCTION" objLabel="">
                                    <OrPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="YEAR_LAST_CONSTRUCTION" objRef="" propName="Value_Numeric"/>
                                            <LessEqualsRelation/>
                                            <DynamicValue classRef="YEAR_LAST_CONSTRUCTION" objRef="" propName="Year_Record"/>
                                        </RelationalPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="YEAR_LAST_CONSTRUCTION" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <NullValue/>
                                        </RelationalPredicate>
                                    </OrPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/14 - LANE_WIDTH (Cross)">
                            <Metadata>
                                <Name>14 - LANE_WIDTH (Cross)</Name>
                                <Description>LANE_WIDTH object's Value_Numeric must be greater than 5 and less than 19.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="LANE_WIDTH" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="integer" value="6"/>
                                        <StaticValue datatype="integer" value="18"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/15 - SPEED_LIMIT (Cross)">
                            <Metadata>
                                <Name>15 - SPEED_LIMIT (Cross)</Name>
                                <Description>SPEED_LIMIT object's Value_Numeric must be (divisible by 5 and less than 90) or equal to 999.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="SPEED_LIMIT" objLabel="">
                                    <OrPredicate>
                                        <AndPredicate>
                                            <RelationalPredicate>
                                                <ModulusValue>
                                                    <DynamicValue classRef="SPEED_LIMIT" objRef="" propName="Value_Numeric"/>
                                                    <StaticValue datatype="integer" value="5"/>
                                                </ModulusValue>
                                                <EqualsRelation/>
                                                <StaticValue datatype="integer" value="0"/>
                                            </RelationalPredicate>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="SPEED_LIMIT" objRef="" propName="Value_Numeric"/>
                                                <LessRelation/>
                                                <StaticValue datatype="integer" value="90"/>
                                            </RelationalPredicate>
                                        </AndPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="SPEED_LIMIT" objRef="" propName="Value_Numeric"/>
                                            <EqualsRelation/>
                                            <StaticValue datatype="integer" value="999"/>
                                        </RelationalPredicate>
                                    </OrPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/16 - COUNTER_PEAK_LANES (Cross)">
                            <Metadata>
                                <Name>16 - COUNTER_PEAK_LANES (Cross)</Name>
                                <Description>COUNTER_PEAK_LANES object's Value_Numeric must be null for all FACILITY_TYPE objects with a Value_Numeric of 1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="integer" value="1"/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                        <ForAllPredicate classLabel="COUNTER_PEAK_LANES" objLabel="">
                                            <ReferentialPredicate classRef1="COUNTER_PEAK_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="COUNTER_PEAK_LANES" objRef="" propName="Value_Numeric"/>
                                                <EqualsRelation/>
                                                <NullValue/>
                                            </RelationalPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/17 - AADT_SINGLE_UNIT &amp; AADT_COMBINATION (Cross)">
                            <Metadata>
                                <Name>17 - AADT_SINGLE_UNIT &amp; AADT_COMBINATION (Cross)</Name>
                                <Description>AADT_SINGLE_UNIT object's Value_Numeric plus AADT_COMBINATION_UNIT object's Value_Numeric must be less than all AADT object's Value_Numeric times 0.8.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT_SINGLE_UNIT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT_SINGLE_UNIT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT_COMBINATION" objLabel="">
                                                <ReferentialPredicate classRef1="AADT_COMBINATION" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ForAllPredicate classLabel="AADT_SINGLE_UNIT" objLabel="">
                                            <ReferentialPredicate classRef1="AADT_SINGLE_UNIT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <ForAllPredicate classLabel="AADT_COMBINATION" objLabel="">
                                                <ReferentialPredicate classRef1="AADT_COMBINATION" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ForAllPredicate classLabel="AADT" objLabel="">
                                                    <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <SummedValue>
                                                            <DynamicValue classRef="AADT_SINGLE_UNIT" objRef="" propName="Value_Numeric"/>
                                                            <DynamicValue classRef="AADT_COMBINATION" objRef="" propName="Value_Numeric"/>
                                                        </SummedValue>
                                                        <LessRelation/>
                                                        <ProductValue>
                                                            <DynamicValue classRef="AADT" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="real" value="0.8"/>
                                                        </ProductValue>
                                                    </RelationalPredicate>
                                                </ForAllPredicate>
                                            </ForAllPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/20 - MEDIAN_WIDTH (Cross)">
                            <Metadata>
                                <Name>20 - MEDIAN_WIDTH (Cross)</Name>
                                <Description>MEDIAN_WIDTH object's Value_Numeric must be null for all FACILITY_TYPE objects with a Value_Numeric of 1 or 4 or for all MEDIAN_TYPE objects with a Value_Numeric less than 2.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <OrPredicate>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <EqualsRelation/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                        </RelationalPredicate>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <EqualsRelation/>
                                                            <StaticValue datatype="integer" value="4"/>
                                                        </RelationalPredicate>
                                                    </OrPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="MEDIAN_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="MEDIAN_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="MEDIAN_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <LessRelation/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </OrPredicate>
                                        <ForAllPredicate classLabel="MEDIAN_WIDTH" objLabel="">
                                            <ReferentialPredicate classRef1="MEDIAN_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="MEDIAN_WIDTH" objRef="" propName="Value_Numeric"/>
                                                <EqualsRelation/>
                                                <NullValue/>
                                            </RelationalPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/22 - MEDIAN_TYPE (Cross)">
                            <Metadata>
                                <Name>22 - MEDIAN_TYPE (Cross)</Name>
                                <Description>MEDIAN_TYPE object's Value_Numeric must equal 2,3,4,5,6,7 for all MEDIAN_WIDTH objects with a Value_Numeric greater than 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="MEDIAN_TYPE" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="MEDIAN_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="MEDIAN_TYPE" objRef="" propName="Value_Numeric"/>
                                                    <GreaterRelation/>
                                                    <StaticValue datatype="integer" value="0"/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                        <ForAllPredicate classLabel="MEDIAN_TYPE" objLabel="">
                                            <ReferentialPredicate classRef1="MEDIAN_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                <DynamicValue classRef="MEDIAN_TYPE" objRef="" propName="Value_Numeric"/>
                                                <StaticValue datatype="integer" value="2"/>
                                                <StaticValue datatype="integer" value="7"/>
                                            </RangePredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/23 - WIDENING_OBSTACLES (Cross)">
                            <Metadata>
                                <Name>23 - WIDENING_OBSTACLES (Cross)</Name>
                                <Description>WIDENING_OBSTACLE object's Value_Text must equal A,B,C,D,E,F,G for all WIDENING_POTENTIAL objects with a Value_Numeric less than 9.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="WIDENING_POTENTIAL" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="WIDENING_POTENTIAL" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="WIDENING_POTENTIAL" objRef="" propName="Value_Numeric"/>
                                                    <LessRelation/>
                                                    <StaticValue datatype="integer" value="9"/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="WIDENING_OBSTACLE" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="WIDENING_OBSTACLE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <OrPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                        <ContainsRelation/>
                                                        <StaticValue datatype="string" value="A"/>
                                                    </RelationalPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                        <ContainsRelation/>
                                                        <StaticValue datatype="string" value="B"/>
                                                    </RelationalPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                        <ContainsRelation/>
                                                        <StaticValue datatype="string" value="C"/>
                                                    </RelationalPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                        <ContainsRelation/>
                                                        <StaticValue datatype="string" value="D"/>
                                                    </RelationalPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                        <ContainsRelation/>
                                                        <StaticValue datatype="string" value="E"/>
                                                    </RelationalPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                        <ContainsRelation/>
                                                        <StaticValue datatype="string" value="F"/>
                                                    </RelationalPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="WIDENING_OBSTACLE" objRef="" propName="Value_Text"/>
                                                        <ContainsRelation/>
                                                        <StaticValue datatype="string" value="G"/>
                                                    </RelationalPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/39 - DIR_FACTOR (Cross)">
                            <Metadata>
                                <Name>39 - DIR_FACTOR (Cross)</Name>
                                <Description>DIR_FACTOR object's Value_Numeric must be 100 for all FACILITY_TYPE objects with a Value_Numeric of 1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="integer" value="1"/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                        <ForAllPredicate classLabel="DIR_FACTOR" objLabel="">
                                            <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="DIR_FACTOR" objRef="" propName="Value_Numeric"/>
                                                <EqualsRelation/>
                                                <StaticValue datatype="integer" value="100"/>
                                            </RelationalPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/40 - DIR_FACTOR (Cross)">
                            <Metadata>
                                <Name>40 - DIR_FACTOR (Cross)</Name>
                                <Description>DIR_FACTOR object's Value_Numeric must be greater than or equal to 50 and less than or equal to 70 for all FACILITY_TYPE objects with a Value_Numeric of 2.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="integer" value="2"/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                        <ForAllPredicate classLabel="DIR_FACTOR" objLabel="">
                                            <ReferentialPredicate classRef1="DIR_FACTOR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <AndPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="DIR_FACTOR" objRef="" propName="Value_Numeric"/>
                                                    <GreaterEqualsRelation/>
                                                    <StaticValue datatype="integer" value="50"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="DIR_FACTOR" objRef="" propName="Value_Numeric"/>
                                                    <LessEqualsRelation/>
                                                    <StaticValue datatype="integer" value="70"/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/41 - FUTURE_AADT (Cross)">
                            <Metadata>
                                <Name>41 - FUTURE_AADT (Cross)</Name>
                                <Description>FUTURE_AADT object's Value_Numeric must be greater than all AADT objects' Value_Numeric and less than all AADT objects' Value_Numeric times 3.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FUTURE_AADT" objLabel="">
                                                <ReferentialPredicate classRef1="FUTURE_AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ForAllPredicate classLabel="FUTURE_AADT" objLabel="">
                                            <ReferentialPredicate classRef1="FUTURE_AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <ForAllPredicate classLabel="AADT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <AndPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="AADT" objRef="" propName="Value_Numeric"/>
                                                        <LessRelation/>
                                                        <DynamicValue classRef="FUTURE_AADT" objRef="" propName="Value_Numeric"/>
                                                    </RelationalPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="FUTURE_AADT" objRef="" propName="Value_Numeric"/>
                                                        <LessRelation/>
                                                        <ProductValue>
                                                            <DynamicValue classRef="AADT" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="3"/>
                                                        </ProductValue>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ForAllPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/42,57 - PCT_PEAK_SINGLE (Cross)">
                            <Metadata>
                                <Name>42,57 - PCT_PEAK_SINGLE (Cross)</Name>
                                <Description>(PCT_PEAK_SINGLE object's Value_Numeric times AADT object's Value_Numeric) divided by 100 must be (greater than 0 and less than 20) and less than or equal to all AADT_SINGLE_UNIT objects' Value_Numeric.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="PCT_PEAK_SINGLE_UNIT" objLabel="">
                                                <ReferentialPredicate classRef1="PCT_PEAK_SINGLE_UNIT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT_SINGLE_UNIT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT_SINGLE_UNIT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ForAllPredicate classLabel="PCT_PEAK_SINGLE_UNIT" objLabel="">
                                            <ReferentialPredicate classRef1="PCT_PEAK_SINGLE_UNIT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <ForAllPredicate classLabel="AADT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ForAllPredicate classLabel="AADT_SINGLE_UNIT" objLabel="">
                                                    <ReferentialPredicate classRef1="AADT_SINGLE_UNIT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <AndPredicate>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DivisionValue>
                                                                <ProductValue>
                                                                    <DynamicValue classRef="PCT_PEAK_SINGLE_UNIT" objRef="" propName="Value_Numeric"/>
                                                                    <DynamicValue classRef="AADT" objRef="" propName="Value_Numeric"/>
                                                                </ProductValue>
                                                                <StaticValue datatype="integer" value="100"/>
                                                            </DivisionValue>
                                                            <StaticValue datatype="integer" value="0"/>
                                                            <StaticValue datatype="integer" value="20"/>
                                                        </RangePredicate>
                                                        <RelationalPredicate>
                                                            <DivisionValue>
                                                                <ProductValue>
                                                                    <DynamicValue classRef="PCT_PEAK_SINGLE_UNIT" objRef="" propName="Value_Numeric"/>
                                                                    <DynamicValue classRef="AADT" objRef="" propName="Value_Numeric"/>
                                                                </ProductValue>
                                                                <StaticValue datatype="integer" value="100"/>
                                                            </DivisionValue>
                                                            <LessEqualsRelation/>
                                                            <DynamicValue classRef="AADT_SINGLE_UNIT" objRef="" propName="Value_Numeric"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ForAllPredicate>
                                            </ForAllPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/43,56 - PCT_PEAK_COMBINATION (Cross)">
                            <Metadata>
                                <Name>43,56 - PCT_PEAK_COMBINATION (Cross)</Name>
                                <Description>(PCT_PEAK_COMBINATION object's Value_Numeric times AADT object's Value_Numeric) divided by 100 must be (greater than 0 and less than 20) and less than or equal to all AADT_SINGLE_UNIT objects' Value_Numeric.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="PCT_PEAK_COMBINATION" objLabel="">
                                                <ReferentialPredicate classRef1="PCT_PEAK_COMBINATION" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT_COMBINATION" objLabel="">
                                                <ReferentialPredicate classRef1="AADT_COMBINATION" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ForAllPredicate classLabel="PCT_PEAK_COMBINATION" objLabel="">
                                            <ReferentialPredicate classRef1="PCT_PEAK_COMBINATION" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <ForAllPredicate classLabel="AADT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ForAllPredicate classLabel="AADT_COMBINATION" objLabel="">
                                                    <ReferentialPredicate classRef1="AADT_COMBINATION" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <AndPredicate>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DivisionValue>
                                                                <ProductValue>
                                                                    <DynamicValue classRef="PCT_PEAK_COMBINATION" objRef="" propName="Value_Numeric"/>
                                                                    <DynamicValue classRef="AADT" objRef="" propName="Value_Numeric"/>
                                                                </ProductValue>
                                                                <StaticValue datatype="integer" value="100"/>
                                                            </DivisionValue>
                                                            <StaticValue datatype="integer" value="0"/>
                                                            <StaticValue datatype="integer" value="20"/>
                                                        </RangePredicate>
                                                        <RelationalPredicate>
                                                            <DivisionValue>
                                                                <ProductValue>
                                                                    <DynamicValue classRef="PCT_PEAK_COMBINATION" objRef="" propName="Value_Numeric"/>
                                                                    <DynamicValue classRef="AADT" objRef="" propName="Value_Numeric"/>
                                                                </ProductValue>
                                                                <StaticValue datatype="integer" value="100"/>
                                                            </DivisionValue>
                                                            <LessEqualsRelation/>
                                                            <DynamicValue classRef="AADT_COMBINATION" objRef="" propName="Value_Numeric"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ForAllPredicate>
                                            </ForAllPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/44 - AADT_COMBINATION_UNIT (Cross)">
                            <Metadata>
                                <Name>44 - AADT_COMBINATION_UNIT (Cross)</Name>
                                <Description>All AADT object's Value_Numeric divided by 2.5 must be greater than all AADT_COMBINATION_UNIT objects' Value_Numeric.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT_COMBINATION" objLabel="">
                                                <ReferentialPredicate classRef1="AADT_COMBINATION" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ForAllPredicate classLabel="AADT_COMBINATION" objLabel="">
                                            <ReferentialPredicate classRef1="AADT_COMBINATION" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <ForAllPredicate classLabel="AADT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DivisionValue>
                                                        <DynamicValue classRef="AADT" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="real" value="2.5"/>
                                                    </DivisionValue>
                                                    <GreaterRelation/>
                                                    <DynamicValue classRef="AADT_COMBINATION" objRef="" propName="Value_Numeric"/>
                                                </RelationalPredicate>
                                            </ForAllPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/45 - AADT_SINGLE_UNIT (Cross)">
                            <Metadata>
                                <Name>45 - AADT_SINGLE_UNIT (Cross)</Name>
                                <Description>All AADT object's Value_Numeric divided by 2.5 must be greater than all AADT_SINGLE_UNIT objects' Value_Numeric.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT_SINGLE_UNIT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT_SINGLE_UNIT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ForAllPredicate classLabel="AADT_SINGLE_UNIT" objLabel="">
                                            <ReferentialPredicate classRef1="AADT_SINGLE_UNIT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <ForAllPredicate classLabel="AADT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DivisionValue>
                                                        <DynamicValue classRef="AADT" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="real" value="2.5"/>
                                                    </DivisionValue>
                                                    <GreaterRelation/>
                                                    <DynamicValue classRef="AADT_SINGLE_UNIT" objRef="" propName="Value_Numeric"/>
                                                </RelationalPredicate>
                                            </ForAllPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/46 - IRI, RUTTING, FAULTING, CRACKING (Cross)">
                            <Metadata>
                                <Name>46 - IRI, RUTTING, FAULTING, CRACKING (Cross)</Name>
                                <Description>IRI, RUTTING, FAULTING, and CRACKING objects' Value_Date must be greater than or equal to their Year_Record minus 2 (for all Sample objects) or (for all F_SYSTEM objects with a Value_Numeric greater than 1 if the IRI, RUTTING, FAULTING and CRACKING objects' Value_Text is null) or (for all NHS objects with a Value_Numeric of 1,2,3,4,5,6,7,8,9 if the IRI, RUTTING, FAULTING and CRACKING objects' Value_Text is null).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:37.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <AndPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="IRI" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="IRI" objRef="" propName="Value_Text"/>
                                                                <EqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="RUTTING" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="RUTTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="RUTTING" objRef="" propName="Value_Text"/>
                                                                <EqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="FAULTING" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="FAULTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="FAULTING" objRef="" propName="Value_Text"/>
                                                                <EqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Text"/>
                                                                <EqualsRelation/>
                                                                <NullValue/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                                <OrPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                                <GreaterRelation/>
                                                                <StaticValue datatype="integer" value="1"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RangePredicate minInclusive="true" maxInclusive="true">
                                                                <DynamicValue classRef="NHS" objRef="" propName="Value_Numeric"/>
                                                                <StaticValue datatype="integer" value="1"/>
                                                                <StaticValue datatype="integer" value="9"/>
                                                            </RangePredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                </OrPredicate>
                                            </AndPredicate>
                                        </OrPredicate>
                                        <AndPredicate>
                                            <ForAllPredicate classLabel="IRI" objLabel="">
                                                <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RangePredicate minInclusive="true" maxInclusive="true" template_id="RULE://HPMS_tc/Cross, LRS, Sample, Length 2018/Value_Date is with in 2 years of Year Record" template_name="Value_Date is with in 2 years of Year Record" template_type="Rule">
                                                    <BuiltinFnValue fnName="to_integer">
                                                        <BuiltinFnValue fnName="re_search">
                                                            <BuiltinFnValue fnName="to_string">
                                                                <DynamicValue classRef="IRI" objRef="" propName="Value_Date" template_param="1"/>
                                                            </BuiltinFnValue>
                                                            <StaticValue datatype="string" value="\d\d\d\d"/>
                                                        </BuiltinFnValue>
                                                    </BuiltinFnValue>
                                                    <DifferenceValue>
                                                        <DynamicValue classRef="IRI" objRef="" propName="Year_Record" template_param="1"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </DifferenceValue>
                                                    <DynamicValue classRef="IRI" objRef="" propName="Year_Record" template_param="1"/>
                                                </RangePredicate>
                                            </ForAllPredicate>
                                            <ForAllPredicate classLabel="RUTTING" objLabel="">
                                                <ReferentialPredicate classRef1="RUTTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RangePredicate minInclusive="true" maxInclusive="true" template_id="RULE://HPMS_tc/Cross, LRS, Sample, Length 2018/Value_Date is with in 2 years of Year Record" template_name="Value_Date is with in 2 years of Year Record" template_type="Rule">
                                                    <BuiltinFnValue fnName="to_integer">
                                                        <BuiltinFnValue fnName="re_search">
                                                            <BuiltinFnValue fnName="to_string">
                                                                <DynamicValue classRef="RUTTING" objRef="" propName="Value_Date" template_param="1"/>
                                                            </BuiltinFnValue>
                                                            <StaticValue datatype="string" value="\d\d\d\d"/>
                                                        </BuiltinFnValue>
                                                    </BuiltinFnValue>
                                                    <DifferenceValue>
                                                        <DynamicValue classRef="RUTTING" objRef="" propName="Year_Record" template_param="1"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </DifferenceValue>
                                                    <DynamicValue classRef="RUTTING" objRef="" propName="Year_Record" template_param="1"/>
                                                </RangePredicate>
                                            </ForAllPredicate>
                                            <ForAllPredicate classLabel="FAULTING" objLabel="">
                                                <ReferentialPredicate classRef1="FAULTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RangePredicate minInclusive="true" maxInclusive="true" template_id="RULE://HPMS_tc/Cross, LRS, Sample, Length 2018/Value_Date is with in 2 years of Year Record" template_name="Value_Date is with in 2 years of Year Record" template_type="Rule">
                                                    <BuiltinFnValue fnName="to_integer">
                                                        <BuiltinFnValue fnName="re_search">
                                                            <BuiltinFnValue fnName="to_string">
                                                                <DynamicValue classRef="FAULTING" objRef="" propName="Value_Date" template_param="1"/>
                                                            </BuiltinFnValue>
                                                            <StaticValue datatype="string" value="\d\d\d\d"/>
                                                        </BuiltinFnValue>
                                                    </BuiltinFnValue>
                                                    <DifferenceValue>
                                                        <DynamicValue classRef="FAULTING" objRef="" propName="Year_Record" template_param="1"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </DifferenceValue>
                                                    <DynamicValue classRef="FAULTING" objRef="" propName="Year_Record" template_param="1"/>
                                                </RangePredicate>
                                            </ForAllPredicate>
                                            <ForAllPredicate classLabel="CRACKING_PERCENT" objLabel="">
                                                <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RangePredicate minInclusive="true" maxInclusive="true" template_id="RULE://HPMS_tc/Cross, LRS, Sample, Length 2018/Value_Date is with in 2 years of Year Record" template_name="Value_Date is with in 2 years of Year Record" template_type="Rule">
                                                    <BuiltinFnValue fnName="to_integer">
                                                        <BuiltinFnValue fnName="re_search">
                                                            <BuiltinFnValue fnName="to_string">
                                                                <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Date" template_param="1"/>
                                                            </BuiltinFnValue>
                                                            <StaticValue datatype="string" value="\d\d\d\d"/>
                                                        </BuiltinFnValue>
                                                    </BuiltinFnValue>
                                                    <DifferenceValue>
                                                        <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Year_Record" template_param="1"/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </DifferenceValue>
                                                    <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Year_Record" template_param="1"/>
                                                </RangePredicate>
                                            </ForAllPredicate>
                                        </AndPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/47 - FAULTING (Cross)">
                            <Metadata>
                                <Name>47 - FAULTING (Cross)</Name>
                                <Description>FAULTING objects must have a Value_Numeric less than or equal to 1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="FAULTING" objLabel="">
                                    <RelationalPredicate>
                                        <DynamicValue classRef="FAULTING" objRef="" propName="Value_Numeric"/>
                                        <LessEqualsRelation/>
                                        <StaticValue datatype="integer" value="1"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/49 - K_FACTOR (Cross)">
                            <Metadata>
                                <Name>49 - K_FACTOR (Cross)</Name>
                                <Description>K_FACTOR object's Value_Numeric must be greater than 4 and less than 20.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="K_FACTOR" objLabel="">
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <DynamicValue classRef="K_FACTOR" objRef="" propName="Value_Numeric"/>
                                        <StaticValue datatype="integer" value="5"/>
                                        <StaticValue datatype="integer" value="19"/>
                                    </RangePredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/51 - CRACKING_PERCENT (Cross)">
                            <Metadata>
                                <Name>51 - CRACKING_PERCENT (Cross)</Name>
                                <Description>CRACKING_PERCENT object's Value_Numeric must be less than 75 for all SURFACE_TYPE objects with a Value_Numeric of 3,4,5,9,10.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                            <AndPredicate>
                                                <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RangePredicate minInclusive="true" maxInclusive="true">
                                                    <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                    <StaticValue datatype="integer" value="3"/>
                                                    <StaticValue datatype="integer" value="5"/>
                                                </RangePredicate>
                                                <RangePredicate minInclusive="true" maxInclusive="true">
                                                    <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                    <StaticValue datatype="integer" value="9"/>
                                                    <StaticValue datatype="integer" value="10"/>
                                                </RangePredicate>
                                            </AndPredicate>
                                        </ExistsPredicate>
                                        <ForAllPredicate classLabel="CRACKING_PERCENT" objLabel="">
                                            <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <RelationalPredicate>
                                                <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Numeric"/>
                                                <LessRelation/>
                                                <StaticValue datatype="integer" value="75"/>
                                            </RelationalPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/52 - RUTTING (Cross)">
                            <Metadata>
                                <Name>52 - RUTTING (Cross)</Name>
                                <Description>RUTTING objects must have a Value_Numeric less than 1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="RUTTING" objLabel="">
                                    <RelationalPredicate>
                                        <DynamicValue classRef="RUTTING" objRef="" propName="Value_Numeric"/>
                                        <LessRelation/>
                                        <StaticValue datatype="integer" value="1"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/53(a) - THROUGH_LANES (Cross)">
                            <Metadata>
                                <Name>53(a) - THROUGH_LANES (Cross)</Name>
                                <Description>THROUGH_LANES object's Value_Numeric must be greater than 1 for all FACILITY_TYPE objects with a Value_Numeric of 2.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="THROUGH_LANES" objLabel="">
                                    <ConditionalPredicate>
                                        <ForAllPredicate classLabel="sys:edge" objLabel="">
                                            <ReferentialPredicate classRef1="THROUGH_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="FACILITY_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="2"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </ForAllPredicate>
                                        <RelationalPredicate>
                                            <DynamicValue classRef="THROUGH_LANES" objRef="" propName="Value_Numeric"/>
                                            <GreaterRelation/>
                                            <StaticValue datatype="integer" value="1"/>
                                        </RelationalPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/53(b) - THROUGH_LANES (Cross)">
                            <Metadata>
                                <Name>53(b) - THROUGH_LANES (Cross)</Name>
                                <Description>THROUGH_LANES object's Value_Numeric must be less than or equal to all COUNTER_PEAK_LANES objects' Value_Numeric plus all PEAK_LANES objects' Value_Numeric.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="COUNTER_PEAK_LANES" objLabel="">
                                                <ReferentialPredicate classRef1="COUNTER_PEAK_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="PEAK_LANES" objLabel="">
                                                <ReferentialPredicate classRef1="PEAK_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="THROUGH_LANES" objLabel="">
                                                <ReferentialPredicate classRef1="THROUGH_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ForAllPredicate classLabel="THROUGH_LANES" objLabel="">
                                            <ReferentialPredicate classRef1="THROUGH_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <ForAllPredicate classLabel="COUNTER_PEAK_LANES" objLabel="">
                                                <ReferentialPredicate classRef1="COUNTER_PEAK_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ForAllPredicate classLabel="PEAK_LANES" objLabel="">
                                                    <ReferentialPredicate classRef1="PEAK_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="THROUGH_LANES" objRef="" propName="Value_Numeric"/>
                                                        <LessEqualsRelation/>
                                                        <SummedValue>
                                                            <DynamicValue classRef="PEAK_LANES" objRef="" propName="Value_Numeric"/>
                                                            <DynamicValue classRef="COUNTER_PEAK_LANES" objRef="" propName="Value_Numeric"/>
                                                        </SummedValue>
                                                    </RelationalPredicate>
                                                </ForAllPredicate>
                                            </ForAllPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/54 - AADT_COMBINATION_UNIT (Cross)">
                            <Metadata>
                                <Name>54 - AADT_COMBINATION_UNIT (Cross)</Name>
                                <Description>AADT_COMBINATION_UNIT object's Value_Numeric must be greater than 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="AADT_COMBINATION" objLabel="">
                                    <RelationalPredicate>
                                        <DynamicValue classRef="AADT_COMBINATION" objRef="" propName="Value_Numeric"/>
                                        <GreaterRelation/>
                                        <StaticValue datatype="integer" value="0"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/55 - AADT_SINGLE_UNIT (Cross)">
                            <Metadata>
                                <Name>55 - AADT_SINGLE_UNIT (Cross)</Name>
                                <Description>AADT_SINGLE_UNIT object's Value_Numeric must be greater than 0.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="AADT_SINGLE_UNIT" objLabel="">
                                    <RelationalPredicate>
                                        <DynamicValue classRef="AADT_SINGLE_UNIT" objRef="" propName="Value_Numeric"/>
                                        <GreaterRelation/>
                                        <StaticValue datatype="integer" value="0"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/60 - SHOULDER_WIDTH_L">
                            <Metadata>
                                <Name>60 - SHOULDER_WIDTH_L</Name>
                                <Description>SHOULDER_WIDTH_L object's Value_Numeric must be less than all MEDIAN_WIDTH objects' Value_Numeric.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SHOULDER_WIDTH_L" objLabel="">
                                                <ReferentialPredicate classRef1="SHOULDER_WIDTH_L" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="MEDIAN_WIDTH" objLabel="">
                                                <ReferentialPredicate classRef1="MEDIAN_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ForAllPredicate classLabel="SHOULDER_WIDTH_L" objLabel="">
                                            <ReferentialPredicate classRef1="SHOULDER_WIDTH_L" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <ForAllPredicate classLabel="MEDIAN_WIDTH" objLabel="">
                                                <ReferentialPredicate classRef1="MEDIAN_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="SHOULDER_WIDTH_L" objRef="" propName="Value_Numeric"/>
                                                    <LessRelation/>
                                                    <DynamicValue classRef="MEDIAN_WIDTH" objRef="" propName="Value_Numeric"/>
                                                </RelationalPredicate>
                                            </ForAllPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/61 - IRI, RUTTING, FAULTING, CRACKING (Cross)">
                            <Metadata>
                                <Name>61 - IRI, RUTTING, FAULTING, CRACKING (Cross)</Name>
                                <Description>IRI, RUTTING, FAULTING, and CRACKING_PERCENT objects' Value_Date must equal their Year_Record if their Value_Text is null and for all F_SYSTEM objects with a Value_Numeric of 1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:37.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <OrPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="IRI" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="IRI" objRef="" propName="Value_Text"/>
                                                            <EqualsRelation/>
                                                            <NullValue/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="RUTTING" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="RUTTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="RUTTING" objRef="" propName="Value_Text"/>
                                                            <EqualsRelation/>
                                                            <NullValue/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="FAULTING" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="FAULTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="FAULTING" objRef="" propName="Value_Text"/>
                                                            <EqualsRelation/>
                                                            <NullValue/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Text"/>
                                                            <EqualsRelation/>
                                                            <NullValue/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                            </OrPredicate>
                                        </AndPredicate>
                                        <AndPredicate>
                                            <ForAllPredicate classLabel="IRI" objLabel="">
                                                <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate template_id="RULE://HPMS_tc/Cross, LRS, Sample, Length 2018/Value_Date is same Year as Year Record" template_name="Value_Date is same Year as Year Record" template_type="Rule">
                                                    <BuiltinFnValue fnName="to_real">
                                                        <BuiltinFnValue fnName="re_search">
                                                            <BuiltinFnValue fnName="to_string">
                                                                <DynamicValue classRef="IRI" objRef="" propName="Value_Date" template_param="1"/>
                                                            </BuiltinFnValue>
                                                            <StaticValue datatype="string" value="\d\d\d\d"/>
                                                        </BuiltinFnValue>
                                                    </BuiltinFnValue>
                                                    <EqualsRelation/>
                                                    <DynamicValue classRef="IRI" objRef="" propName="Year_Record" template_param="1"/>
                                                </RelationalPredicate>
                                            </ForAllPredicate>
                                            <ForAllPredicate classLabel="RUTTING" objLabel="">
                                                <ReferentialPredicate classRef1="RUTTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate template_id="RULE://HPMS_tc/Cross, LRS, Sample, Length 2018/Value_Date is same Year as Year Record" template_name="Value_Date is same Year as Year Record" template_type="Rule">
                                                    <BuiltinFnValue fnName="to_real">
                                                        <BuiltinFnValue fnName="re_search">
                                                            <BuiltinFnValue fnName="to_string">
                                                                <DynamicValue classRef="RUTTING" objRef="" propName="Value_Date" template_param="1"/>
                                                            </BuiltinFnValue>
                                                            <StaticValue datatype="string" value="\d\d\d\d"/>
                                                        </BuiltinFnValue>
                                                    </BuiltinFnValue>
                                                    <EqualsRelation/>
                                                    <DynamicValue classRef="RUTTING" objRef="" propName="Year_Record" template_param="1"/>
                                                </RelationalPredicate>
                                            </ForAllPredicate>
                                            <ForAllPredicate classLabel="FAULTING" objLabel="">
                                                <ReferentialPredicate classRef1="FAULTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate template_id="RULE://HPMS_tc/Cross, LRS, Sample, Length 2018/Value_Date is same Year as Year Record" template_name="Value_Date is same Year as Year Record" template_type="Rule">
                                                    <BuiltinFnValue fnName="to_real">
                                                        <BuiltinFnValue fnName="re_search">
                                                            <BuiltinFnValue fnName="to_string">
                                                                <DynamicValue classRef="FAULTING" objRef="" propName="Value_Date" template_param="1"/>
                                                            </BuiltinFnValue>
                                                            <StaticValue datatype="string" value="\d\d\d\d"/>
                                                        </BuiltinFnValue>
                                                    </BuiltinFnValue>
                                                    <EqualsRelation/>
                                                    <DynamicValue classRef="FAULTING" objRef="" propName="Year_Record" template_param="1"/>
                                                </RelationalPredicate>
                                            </ForAllPredicate>
                                            <ForAllPredicate classLabel="CRACKING_PERCENT" objLabel="">
                                                <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <RelationalPredicate template_id="RULE://HPMS_tc/Cross, LRS, Sample, Length 2018/Value_Date is same Year as Year Record" template_name="Value_Date is same Year as Year Record" template_type="Rule">
                                                    <BuiltinFnValue fnName="to_real">
                                                        <BuiltinFnValue fnName="re_search">
                                                            <BuiltinFnValue fnName="to_string">
                                                                <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Date" template_param="1"/>
                                                            </BuiltinFnValue>
                                                            <StaticValue datatype="string" value="\d\d\d\d"/>
                                                        </BuiltinFnValue>
                                                    </BuiltinFnValue>
                                                    <EqualsRelation/>
                                                    <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Year_Record" template_param="1"/>
                                                </RelationalPredicate>
                                            </ForAllPredicate>
                                        </AndPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/62 - IRI, PSR (Cross)">
                            <Metadata>
                                <Name>62 - IRI, PSR (Cross)</Name>
                                <Description>PSR object's Value_Numeric must be greater than 0 and its Value_Text must equal A for all F_SYSTEM objects with a Value_Numeric of 1 and for all IRI objects with a Value_Numeric of Null.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="IRI" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="IRI" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <NullValue/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ForAllPredicate classLabel="PSR" objLabel="">
                                            <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <AndPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="PSR" objRef="" propName="Value_Numeric"/>
                                                    <GreaterRelation/>
                                                    <StaticValue datatype="integer" value="0"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="PSR" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="A"/>
                                                </RelationalPredicate>
                                            </AndPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/63 - CRACKING_PERCENT (Cross)">
                            <Metadata>
                                <Name>63 - CRACKING_PERCENT (Cross)</Name>
                                <Description>CRACKING_PERCENT objects' Value_Numeric must be less than or equal to [%] for all SURFACE_TYPE objects with a Value_Numeric of 2,6,7,8 based on the Value_Numeric of LANE_WIDTH objects.\n\nLANE_WIDTH 8 - 81.30%\nLANE_WIDTH 9 - 72.20%\nLANE_WIDTH 10 - 65.00%\nLANE_WIDTH 11 - 59.10%\nLANE_WIDTH 12 - 54.20%\nLANE_WIDTH 13 - 50.00%\nLANE_WIDTH 14 - 46.40%\nLANE_WIDTH 15 - 43.30%\nLANE_WIDTH 16 - 40.60%</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SURFACE_TYPE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="SURFACE_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <OrPredicate>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <EqualsRelation/>
                                                            <StaticValue datatype="integer" value="2"/>
                                                        </RelationalPredicate>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="SURFACE_TYPE" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="6"/>
                                                            <StaticValue datatype="integer" value="8"/>
                                                        </RangePredicate>
                                                    </OrPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="LANE_WIDTH" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="LANE_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                                        <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                                        <StaticValue datatype="integer" value="8"/>
                                                        <StaticValue datatype="integer" value="16"/>
                                                    </RangePredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="at least" n="1" classLabel="LANE_WIDTH" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="LANE_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="8"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Numeric"/>
                                                        <LessEqualsRelation/>
                                                        <StaticValue datatype="real" value="81.30"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ConditionalPredicate>
                                                <ExistsPredicate qualifier="at least" n="1" classLabel="LANE_WIDTH" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="LANE_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                                            <EqualsRelation/>
                                                            <StaticValue datatype="integer" value="9"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Numeric"/>
                                                            <LessEqualsRelation/>
                                                            <StaticValue datatype="real" value="72.20"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ConditionalPredicate>
                                                    <ExistsPredicate qualifier="at least" n="1" classLabel="LANE_WIDTH" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="LANE_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                                                <EqualsRelation/>
                                                                <StaticValue datatype="integer" value="10"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                                        <AndPredicate>
                                                            <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                            <RelationalPredicate>
                                                                <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Numeric"/>
                                                                <LessEqualsRelation/>
                                                                <StaticValue datatype="real" value="65"/>
                                                            </RelationalPredicate>
                                                        </AndPredicate>
                                                    </ExistsPredicate>
                                                    <ConditionalPredicate>
                                                        <ExistsPredicate qualifier="at least" n="1" classLabel="LANE_WIDTH" objLabel="">
                                                            <AndPredicate>
                                                                <ReferentialPredicate classRef1="LANE_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                <RelationalPredicate>
                                                                    <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                                                    <EqualsRelation/>
                                                                    <StaticValue datatype="integer" value="11"/>
                                                                </RelationalPredicate>
                                                            </AndPredicate>
                                                        </ExistsPredicate>
                                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                                            <AndPredicate>
                                                                <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                <RelationalPredicate>
                                                                    <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Numeric"/>
                                                                    <LessEqualsRelation/>
                                                                    <StaticValue datatype="real" value="59.10"/>
                                                                </RelationalPredicate>
                                                            </AndPredicate>
                                                        </ExistsPredicate>
                                                        <ConditionalPredicate>
                                                            <ExistsPredicate qualifier="at least" n="1" classLabel="LANE_WIDTH" objLabel="">
                                                                <AndPredicate>
                                                                    <ReferentialPredicate classRef1="LANE_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                    <RelationalPredicate>
                                                                        <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                                                        <EqualsRelation/>
                                                                        <StaticValue datatype="integer" value="12"/>
                                                                    </RelationalPredicate>
                                                                </AndPredicate>
                                                            </ExistsPredicate>
                                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                                                <AndPredicate>
                                                                    <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                    <RelationalPredicate>
                                                                        <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Numeric"/>
                                                                        <LessEqualsRelation/>
                                                                        <StaticValue datatype="real" value="54.20"/>
                                                                    </RelationalPredicate>
                                                                </AndPredicate>
                                                            </ExistsPredicate>
                                                            <ConditionalPredicate>
                                                                <ExistsPredicate qualifier="at least" n="1" classLabel="LANE_WIDTH" objLabel="">
                                                                    <AndPredicate>
                                                                        <ReferentialPredicate classRef1="LANE_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                        <RelationalPredicate>
                                                                            <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                                                            <EqualsRelation/>
                                                                            <StaticValue datatype="integer" value="13"/>
                                                                        </RelationalPredicate>
                                                                    </AndPredicate>
                                                                </ExistsPredicate>
                                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                                                    <AndPredicate>
                                                                        <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                        <RelationalPredicate>
                                                                            <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Numeric"/>
                                                                            <LessEqualsRelation/>
                                                                            <StaticValue datatype="real" value="50"/>
                                                                        </RelationalPredicate>
                                                                    </AndPredicate>
                                                                </ExistsPredicate>
                                                                <ConditionalPredicate>
                                                                    <ExistsPredicate qualifier="at least" n="1" classLabel="LANE_WIDTH" objLabel="">
                                                                        <AndPredicate>
                                                                            <ReferentialPredicate classRef1="LANE_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                            <RelationalPredicate>
                                                                                <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                                                                <EqualsRelation/>
                                                                                <StaticValue datatype="integer" value="14"/>
                                                                            </RelationalPredicate>
                                                                        </AndPredicate>
                                                                    </ExistsPredicate>
                                                                    <ExistsPredicate qualifier="exactly" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                                                        <AndPredicate>
                                                                            <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                            <RelationalPredicate>
                                                                                <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Numeric"/>
                                                                                <LessEqualsRelation/>
                                                                                <StaticValue datatype="real" value="46.40"/>
                                                                            </RelationalPredicate>
                                                                        </AndPredicate>
                                                                    </ExistsPredicate>
                                                                    <ConditionalPredicate>
                                                                        <ExistsPredicate qualifier="at least" n="1" classLabel="LANE_WIDTH" objLabel="">
                                                                            <AndPredicate>
                                                                                <ReferentialPredicate classRef1="LANE_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                                <RelationalPredicate>
                                                                                    <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                                                                    <EqualsRelation/>
                                                                                    <StaticValue datatype="integer" value="15"/>
                                                                                </RelationalPredicate>
                                                                            </AndPredicate>
                                                                        </ExistsPredicate>
                                                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                                                            <AndPredicate>
                                                                                <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                                <RelationalPredicate>
                                                                                    <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Numeric"/>
                                                                                    <LessEqualsRelation/>
                                                                                    <StaticValue datatype="real" value="43.30"/>
                                                                                </RelationalPredicate>
                                                                            </AndPredicate>
                                                                        </ExistsPredicate>
                                                                        <ConditionalPredicate>
                                                                            <ExistsPredicate qualifier="at least" n="1" classLabel="LANE_WIDTH" objLabel="">
                                                                                <AndPredicate>
                                                                                    <ReferentialPredicate classRef1="LANE_WIDTH" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                                    <RelationalPredicate>
                                                                                        <DynamicValue classRef="LANE_WIDTH" objRef="" propName="Value_Numeric"/>
                                                                                        <EqualsRelation/>
                                                                                        <StaticValue datatype="integer" value="16"/>
                                                                                    </RelationalPredicate>
                                                                                </AndPredicate>
                                                                            </ExistsPredicate>
                                                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                                                                <AndPredicate>
                                                                                    <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                                                    <RelationalPredicate>
                                                                                        <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Numeric"/>
                                                                                        <LessEqualsRelation/>
                                                                                        <StaticValue datatype="real" value="40.60"/>
                                                                                    </RelationalPredicate>
                                                                                </AndPredicate>
                                                                            </ExistsPredicate>
                                                                        </ConditionalPredicate>
                                                                    </ConditionalPredicate>
                                                                </ConditionalPredicate>
                                                            </ConditionalPredicate>
                                                        </ConditionalPredicate>
                                                    </ConditionalPredicate>
                                                </ConditionalPredicate>
                                            </ConditionalPredicate>
                                        </ConditionalPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/64 - CRACKING (Cross)">
                            <Metadata>
                                <Name>64 - CRACKING (Cross)</Name>
                                <Description>CRACKING object's Value_Text must be A,B,C,D where (CRACKING object's Value_Date is not equal to objects' Year_Record and for all F_SYSTEM objects with a Value_Numeric of 1) or (for all NHS objects with a Value_Date less than CRACKING object's Year_Record minus 2).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <ForAllPredicate classLabel="F_SYSTEM" objLabel="">
                                                <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ConditionalPredicate>
                                                    <ExistsPredicate qualifier="at most" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                                        <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                    <ForAllPredicate classLabel="CRACKING_PERCENT" objLabel="">
                                                        <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Date"/>
                                                            <NotEqualsRelation/>
                                                            <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Year_Record"/>
                                                        </RelationalPredicate>
                                                    </ForAllPredicate>
                                                </ConditionalPredicate>
                                            </ForAllPredicate>
                                            <ForAllPredicate classLabel="NHS" objLabel="">
                                                <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ConditionalPredicate>
                                                    <ExistsPredicate qualifier="at most" n="1" classLabel="CRACKING_PERCENT" objLabel="">
                                                        <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                    <ForAllPredicate classLabel="CRACKING_PERCENT" objLabel="">
                                                        <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DifferenceValue>
                                                                <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Year_Record"/>
                                                                <StaticValue datatype="integer" value="2"/>
                                                            </DifferenceValue>
                                                            <GreaterRelation/>
                                                            <DynamicValue classRef="NHS" objRef="" propName="Value_Date"/>
                                                        </RelationalPredicate>
                                                    </ForAllPredicate>
                                                </ConditionalPredicate>
                                            </ForAllPredicate>
                                        </OrPredicate>
                                        <ForAllPredicate classLabel="CRACKING_PERCENT" objLabel="">
                                            <ReferentialPredicate classRef1="CRACKING_PERCENT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <OrPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="A"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="B"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="C"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="D"/>
                                                </RelationalPredicate>
                                            </OrPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/64 - FAULTING (Cross)">
                            <Metadata>
                                <Name>64 - FAULTING (Cross)</Name>
                                <Description>FAULTING object's Value_Text must be A,B,C,D where (FAULTING object's Value_Date is not equal to objects' Year_Record and for all F_SYSTEM objects with a Value_Numeric of 1) or (for all NHS objects with a Value_Date less than FAULTING object's Year_Record minus 2).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <ForAllPredicate classLabel="F_SYSTEM" objLabel="">
                                                <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ConditionalPredicate>
                                                    <ExistsPredicate qualifier="at most" n="1" classLabel="FAULTING" objLabel="">
                                                        <ReferentialPredicate classRef1="FAULTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                    <ForAllPredicate classLabel="FAULTING" objLabel="">
                                                        <ReferentialPredicate classRef1="FAULTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="FAULTING" objRef="" propName="Value_Date"/>
                                                            <NotEqualsRelation/>
                                                            <DynamicValue classRef="FAULTING" objRef="" propName="Year_Record"/>
                                                        </RelationalPredicate>
                                                    </ForAllPredicate>
                                                </ConditionalPredicate>
                                            </ForAllPredicate>
                                            <ForAllPredicate classLabel="NHS" objLabel="">
                                                <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ConditionalPredicate>
                                                    <ExistsPredicate qualifier="at most" n="1" classLabel="FAULTING" objLabel="">
                                                        <ReferentialPredicate classRef1="FAULTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                    <ForAllPredicate classLabel="FAULTING" objLabel="">
                                                        <ReferentialPredicate classRef1="FAULTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DifferenceValue>
                                                                <DynamicValue classRef="FAULTING" objRef="" propName="Year_Record"/>
                                                                <StaticValue datatype="integer" value="2"/>
                                                            </DifferenceValue>
                                                            <GreaterRelation/>
                                                            <DynamicValue classRef="NHS" objRef="" propName="Value_Date"/>
                                                        </RelationalPredicate>
                                                    </ForAllPredicate>
                                                </ConditionalPredicate>
                                            </ForAllPredicate>
                                        </OrPredicate>
                                        <ForAllPredicate classLabel="FAULTING" objLabel="">
                                            <ReferentialPredicate classRef1="FAULTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <OrPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="FAULTING" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="A"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="FAULTING" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="B"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="FAULTING" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="C"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="FAULTING" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="D"/>
                                                </RelationalPredicate>
                                            </OrPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/64 - IRI (Cross)">
                            <Metadata>
                                <Name>64 - IRI (Cross)</Name>
                                <Description>IRI object's Value_Text must be A,B,C,D where (IRI object's Value_Date is not equal to objects' Year_Record and for all F_SYSTEM objects with a Value_Numeric of 1) or (for all NHS objects with a Value_Date less than IRI object's Year_Record minus 2).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <ForAllPredicate classLabel="F_SYSTEM" objLabel="">
                                                <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ConditionalPredicate>
                                                    <ExistsPredicate qualifier="at most" n="1" classLabel="IRI" objLabel="">
                                                        <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                    <ForAllPredicate classLabel="IRI" objLabel="">
                                                        <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="IRI" objRef="" propName="Value_Date"/>
                                                            <NotEqualsRelation/>
                                                            <DynamicValue classRef="IRI" objRef="" propName="Year_Record"/>
                                                        </RelationalPredicate>
                                                    </ForAllPredicate>
                                                </ConditionalPredicate>
                                            </ForAllPredicate>
                                            <ForAllPredicate classLabel="NHS" objLabel="">
                                                <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ConditionalPredicate>
                                                    <ExistsPredicate qualifier="at most" n="1" classLabel="IRI" objLabel="">
                                                        <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                    <ForAllPredicate classLabel="IRI" objLabel="">
                                                        <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DifferenceValue>
                                                                <DynamicValue classRef="IRI" objRef="" propName="Year_Record"/>
                                                                <StaticValue datatype="integer" value="2"/>
                                                            </DifferenceValue>
                                                            <GreaterRelation/>
                                                            <DynamicValue classRef="NHS" objRef="" propName="Value_Date"/>
                                                        </RelationalPredicate>
                                                    </ForAllPredicate>
                                                </ConditionalPredicate>
                                            </ForAllPredicate>
                                        </OrPredicate>
                                        <ForAllPredicate classLabel="IRI" objLabel="">
                                            <ReferentialPredicate classRef1="IRI" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <OrPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="IRI" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="A"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="IRI" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="B"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="IRI" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="C"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="IRI" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="D"/>
                                                </RelationalPredicate>
                                            </OrPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/64 - RUTTING (Cross)">
                            <Metadata>
                                <Name>64 - RUTTING (Cross)</Name>
                                <Description>RUTTING object's Value_Text must be A,B,C,D where (RUTTING object's Value_Date is not equal to objects' Year_Record and for all F_SYSTEM objects with a Value_Numeric of 1) or (for all NHS objects with a Value_Date less than RUTTING object's Year_Record minus 2).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <ForAllPredicate classLabel="F_SYSTEM" objLabel="">
                                                <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ConditionalPredicate>
                                                    <ExistsPredicate qualifier="at most" n="1" classLabel="RUTTING" objLabel="">
                                                        <ReferentialPredicate classRef1="RUTTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                    <ForAllPredicate classLabel="RUTTING" objLabel="">
                                                        <ReferentialPredicate classRef1="RUTTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="RUTTING" objRef="" propName="Value_Date"/>
                                                            <NotEqualsRelation/>
                                                            <DynamicValue classRef="RUTTING" objRef="" propName="Year_Record"/>
                                                        </RelationalPredicate>
                                                    </ForAllPredicate>
                                                </ConditionalPredicate>
                                            </ForAllPredicate>
                                            <ForAllPredicate classLabel="NHS" objLabel="">
                                                <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <ConditionalPredicate>
                                                    <ExistsPredicate qualifier="at most" n="1" classLabel="RUTTING" objLabel="">
                                                        <ReferentialPredicate classRef1="RUTTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    </ExistsPredicate>
                                                    <ForAllPredicate classLabel="RUTTING" objLabel="">
                                                        <ReferentialPredicate classRef1="RUTTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DifferenceValue>
                                                                <DynamicValue classRef="RUTTING" objRef="" propName="Year_Record"/>
                                                                <StaticValue datatype="integer" value="2"/>
                                                            </DifferenceValue>
                                                            <GreaterRelation/>
                                                            <DynamicValue classRef="NHS" objRef="" propName="Value_Date"/>
                                                        </RelationalPredicate>
                                                    </ForAllPredicate>
                                                </ConditionalPredicate>
                                            </ForAllPredicate>
                                        </OrPredicate>
                                        <ForAllPredicate classLabel="RUTTING" objLabel="">
                                            <ReferentialPredicate classRef1="RUTTING" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <OrPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="RUTTING" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="A"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="RUTTING" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="B"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="RUTTING" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="C"/>
                                                </RelationalPredicate>
                                                <RelationalPredicate>
                                                    <DynamicValue classRef="RUTTING" objRef="" propName="Value_Text"/>
                                                    <EqualsRelation/>
                                                    <StaticValue datatype="string" value="D"/>
                                                </RelationalPredicate>
                                            </OrPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/65 - PSR (Cross) (1.1)">
                            <Metadata>
                                <Name>65 - PSR (Cross) (1.1)</Name>
                                <Description>PSR object's Value_Date must be greater than or equal to its Year_Record minus 2 (for all Sample objects) or (for all F_SYSTEM objects with a Value_Numeric greater than 1 and for all NHS objects with a Value_Numeric of 1,2,3,4,5,6,7,8,9).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <OrPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                                <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <AndPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RelationalPredicate>
                                                            <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                            <GreaterRelation/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                        </RelationalPredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                                <ExistsPredicate qualifier="exactly" n="1" classLabel="NHS" objLabel="">
                                                    <AndPredicate>
                                                        <ReferentialPredicate classRef1="NHS" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                        <RangePredicate minInclusive="true" maxInclusive="true">
                                                            <DynamicValue classRef="NHS" objRef="" propName="Value_Numeric"/>
                                                            <StaticValue datatype="integer" value="1"/>
                                                            <StaticValue datatype="integer" value="9"/>
                                                        </RangePredicate>
                                                    </AndPredicate>
                                                </ExistsPredicate>
                                            </AndPredicate>
                                        </OrPredicate>
                                        <ForAllPredicate classLabel="PSR" objLabel="">
                                            <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <RelationalPredicate>
                                                <BuiltinFnValue fnName="to_real">
                                                    <BuiltinFnValue fnName="re_search">
                                                        <BuiltinFnValue fnName="to_string">
                                                            <DynamicValue classRef="PSR" objRef="" propName="Value_Date"/>
                                                        </BuiltinFnValue>
                                                        <StaticValue datatype="string" value="\d\d\d\d"/>
                                                    </BuiltinFnValue>
                                                </BuiltinFnValue>
                                                <GreaterEqualsRelation/>
                                                <DifferenceValue>
                                                    <DynamicValue classRef="PSR" objRef="" propName="Year_Record"/>
                                                    <StaticValue datatype="integer" value="2"/>
                                                </DifferenceValue>
                                            </RelationalPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/66 - PSR (Cross)">
                            <Metadata>
                                <Name>66 - PSR (Cross)</Name>
                                <Description>PSR object's Value_Date must equal its Year_Record if the PSR object's Value_Text is A and for all F_SYSTEM objects with a Value_Numeric of 1.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="PSR" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="PSR" objRef="" propName="Value_Text"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="string" value="A"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ForAllPredicate classLabel="PSR" objLabel="">
                                            <ReferentialPredicate classRef1="PSR" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            <RelationalPredicate>
                                                <BuiltinFnValue fnName="to_real">
                                                    <BuiltinFnValue fnName="re_search">
                                                        <BuiltinFnValue fnName="to_string">
                                                            <DynamicValue classRef="PSR" objRef="" propName="Value_Date"/>
                                                        </BuiltinFnValue>
                                                        <StaticValue datatype="string" value="\d\d\d\d"/>
                                                    </BuiltinFnValue>
                                                </BuiltinFnValue>
                                                <EqualsRelation/>
                                                <DynamicValue classRef="PSR" objRef="" propName="Year_Record"/>
                                            </RelationalPredicate>
                                        </ForAllPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/Null - CRACKING_PERCENT (Length)">
                            <Metadata>
                                <Name>Null - CRACKING_PERCENT (Length)</Name>
                                <Description>CRACKING_PERCENT objects must not have a LENGTH greater than 0.11 miles.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="CRACKING_PERCENT" objLabel="">
                                    <RelationalPredicate>
                                        <BuiltinFnValue fnName="line_length">
                                            <DynamicValue classRef="CRACKING_PERCENT" objRef="" propName="geometry"/>
                                        </BuiltinFnValue>
                                        <LessRelation/>
                                        <StaticValue datatype="real" value="0.11"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/Null - FAULTING (Length)">
                            <Metadata>
                                <Name>Null - FAULTING (Length)</Name>
                                <Description>FAULTING objects must not have a LENGTH greater than 0.11 miles.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="FAULTING" objLabel="">
                                    <RelationalPredicate>
                                        <BuiltinFnValue fnName="line_length">
                                            <DynamicValue classRef="FAULTING" objRef="" propName="geometry"/>
                                        </BuiltinFnValue>
                                        <LessRelation/>
                                        <StaticValue datatype="real" value="0.11"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/Null - PSR (Length)">
                            <Metadata>
                                <Name>Null - PSR (Length)</Name>
                                <Description>PSR objects must not have a LENGTH greater than 0.11 miles.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="PSR" objLabel="">
                                    <RelationalPredicate>
                                        <BuiltinFnValue fnName="line_length">
                                            <DynamicValue classRef="PSR" objRef="" propName="geometry"/>
                                        </BuiltinFnValue>
                                        <LessRelation/>
                                        <StaticValue datatype="real" value="0.11"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/Null - RUTTING (Length)">
                            <Metadata>
                                <Name>Null - RUTTING (Length)</Name>
                                <Description>RUTTING objects must not have a LENGTH greater than 0.11 miles.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="RUTTING" objLabel="">
                                    <RelationalPredicate>
                                        <BuiltinFnValue fnName="line_length">
                                            <DynamicValue classRef="RUTTING" objRef="" propName="geometry"/>
                                        </BuiltinFnValue>
                                        <LessRelation/>
                                        <StaticValue datatype="real" value="0.11"/>
                                    </RelationalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/Null - SIGNAL_TYPE (Cross)">
                            <Metadata>
                                <Name>Null - SIGNAL_TYPE (Cross)</Name>
                                <Description>SIGNAL_TYPE object's Value_Numeric must be null or 5 for all F_SYSTEM objects with a Value_Numeric of 1 and for all URBAN_CODE objects with a Value_Numeric not equal to 99999.</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="F_SYSTEM" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="1"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                <AndPredicate>
                                                    <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="URBAN_CODE" objRef="" propName="Value_Numeric"/>
                                                        <NotEqualsRelation/>
                                                        <StaticValue datatype="integer" value="99999"/>
                                                    </RelationalPredicate>
                                                </AndPredicate>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                        <ConditionalPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="SIGNAL_TYPE" objLabel="">
                                                <ReferentialPredicate classRef1="SIGNAL_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ForAllPredicate classLabel="SIGNAL_TYPE" objLabel="">
                                                <ReferentialPredicate classRef1="SIGNAL_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                                <OrPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="SIGNAL_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <StaticValue datatype="integer" value="5"/>
                                                    </RelationalPredicate>
                                                    <RelationalPredicate>
                                                        <DynamicValue classRef="SIGNAL_TYPE" objRef="" propName="Value_Numeric"/>
                                                        <EqualsRelation/>
                                                        <NullValue/>
                                                    </RelationalPredicate>
                                                </OrPredicate>
                                            </ForAllPredicate>
                                        </ConditionalPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/Null - Sample Crosses Over TOPS (Sample)">
                            <Metadata>
                                <Name>Null - Sample Crosses Over TOPS (Sample)</Name>
                                <Description>Sample objects must be within bounds of the TOPS (sys:edges that refer to at least one of each: AADT, F_SYSTEM, THROUGH_LANES, URBAN_CODE, FACILITY_TYPE).</Description>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <RootPredicate classLabel="sys:edge" objLabel="">
                                    <ConditionalPredicate>
                                        <ExistsPredicate qualifier="exactly" n="1" classLabel="Sample" objLabel="">
                                            <ReferentialPredicate classRef1="Sample" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                        </ExistsPredicate>
                                        <AndPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="AADT" objLabel="">
                                                <ReferentialPredicate classRef1="AADT" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="F_SYSTEM" objLabel="">
                                                <ReferentialPredicate classRef1="F_SYSTEM" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="THROUGH_LANES" objLabel="">
                                                <ReferentialPredicate classRef1="THROUGH_LANES" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="URBAN_CODE" objLabel="">
                                                <ReferentialPredicate classRef1="URBAN_CODE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                            <ExistsPredicate qualifier="exactly" n="1" classLabel="FACILITY_TYPE" objLabel="">
                                                <ReferentialPredicate classRef1="FACILITY_TYPE" objRef1="" refName="sys:line_to_edge" classRef2="sys:edge" objRef2=""/>
                                            </ExistsPredicate>
                                        </AndPredicate>
                                    </ConditionalPredicate>
                                </RootPredicate>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/Value_Date is same Year as Year Record">
                            <Metadata>
                                <Name>Value_Date is same Year as Year Record</Name>
                                <Description/>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <Template>
                                    <Parameter classLabel="IRI" objLabel=""/>
                                    <RelationalPredicate>
                                        <BuiltinFnValue fnName="to_real">
                                            <BuiltinFnValue fnName="re_search">
                                                <BuiltinFnValue fnName="to_string">
                                                    <DynamicValue classRef="IRI" objRef="" propName="Value_Date"/>
                                                </BuiltinFnValue>
                                                <StaticValue datatype="string" value="\d\d\d\d"/>
                                            </BuiltinFnValue>
                                        </BuiltinFnValue>
                                        <EqualsRelation/>
                                        <DynamicValue classRef="IRI" objRef="" propName="Year_Record"/>
                                    </RelationalPredicate>
                                </Template>
                            </Rule>
                        </Item>
                        <Item id="RULE://hpms/HPMS/5 - HPMS Validations/Cross, LRS, Sample, Length/Value_Date is with in 2 years of Year Record">
                            <Metadata>
                                <Name>Value_Date is with in 2 years of Year Record</Name>
                                <Description/>
                                <Comments>Branch: master
Recent Commits:
</Comments>
                                <Created>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </Created>
                                <LastEdited>
                                    <UserDate date="2020-01-02T00:19:28.000Z" user="1Spatial"/>
                                </LastEdited>
                            </Metadata>
                            <IsShortcut>false</IsShortcut>
                            <Rule>
                                <Template>
                                    <Parameter classLabel="IRI" objLabel=""/>
                                    <RangePredicate minInclusive="true" maxInclusive="true">
                                        <BuiltinFnValue fnName="to_integer">
                                            <BuiltinFnValue fnName="re_search">
                                                <BuiltinFnValue fnName="to_string">
                                                    <DynamicValue classRef="IRI" objRef="" propName="Value_Date"/>
                                                </BuiltinFnValue>
                                                <StaticValue datatype="string" value="\d\d\d\d"/>
                                            </BuiltinFnValue>
                                        </BuiltinFnValue>
                                        <DifferenceValue>
                                            <DynamicValue classRef="IRI" objRef="" propName="Year_Record"/>
                                            <StaticValue datatype="integer" value="2"/>
                                        </DifferenceValue>
                                        <DynamicValue classRef="IRI" objRef="" propName="Year_Record"/>
                                    </RangePredicate>
                                </Template>
                            </Rule>
                        </Item>
                    </RuleFolder>
                    <RuleFolder>
                        <Metadata>
                            <Name>Pavement</Name>
                            <Description/>
                            <Comments>Branch: master
Recent Commits:
</Comments>
                            <Created>
                                <UserDate date="2020-01-02T00:19:28.000Z"/>
                            </Created>
                            <LastEdited>
                                <UserDate date="2020-01-02T00:19:28.000Z"/>
                            </LastEdited>
                        </Metadata>
                        <IsShortcut>false</IsShortcut>
                    </RuleFolder>
                    <RuleFolder>
                        <Metadata>
                            <Name>Safety</Name>
                            <Description/>
                            <Comments>Branch: master
Recent Commits:
</Comments>
                            <Created>
                                <UserDate date="2020-01-02T00:19:28.000Z"/>
                            </Created>
                            <LastEdited>
                                <UserDate date="2020-01-02T00:19:28.000Z"/>
                            </LastEdited>
                        </Metadata>
                        <IsShortcut>false</IsShortcut>
                    </RuleFolder>
                    <RuleFolder>
                        <Metadata>
                            <Name>Tolerance</Name>
                            <Description/>
                            <Comments>Branch: master
Recent Commits:
</Comments>
                            <Created>
                                <UserDate date="2020-01-02T00:19:28.000Z"/>
                            </Created>
                            <LastEdited>
                                <UserDate date="2020-01-02T00:19:28.000Z"/>
                            </LastEdited>
                        </Metadata>
                        <IsShortcut>false</IsShortcut>
                    </RuleFolder>
                    <RuleFolder>
                        <Metadata>
                            <Name>Traffic</Name>
                            <Description/>
                            <Comments>Branch: master
Recent Commits:
</Comments>
                            <Created>
                                <UserDate date="2020-01-02T00:19:29.000Z"/>
                            </Created>
                            <LastEdited>
                                <UserDate date="2020-01-02T00:19:29.000Z"/>
                            </LastEdited>
                        </Metadata>
                        <IsShortcut>false</IsShortcut>
                    </RuleFolder>
                </RuleFolder>
            </RuleFolder>
        </RuleFolder>
        <RuleFolder>
            <Metadata>
                <Name>HPMS_tc</Name>
                <Created>
                    <UserDate/>
                </Created>
                <LastEdited>
                    <UserDate date="2019-12-04T10:45:07.000Z" user="1Spatial"/>
                </LastEdited>
            </Metadata>
            <IsShortcut>false</IsShortcut>
            <RuleFolder>
                <Metadata>
                    <Name>Cross, LRS, Sample, Length 2018</Name>
                    <Created>
                        <UserDate/>
                    </Created>
                    <LastEdited>
                        <UserDate date="2019-12-04T10:45:07.000Z" user="1Spatial"/>
                    </LastEdited>
                </Metadata>
                <IsShortcut>false</IsShortcut>
                <Item id="RULE://HPMS_tc/Cross, LRS, Sample, Length 2018/Value_Date is with in 2 years of Year Record">
                    <Metadata>
                        <Name>Value_Date is with in 2 years of Year Record</Name>
                        <Created>
                            <UserDate date="2019-12-04T10:25:23.000Z" user="1Spatial"/>
                        </Created>
                        <LastEdited>
                            <UserDate date="2019-12-04T10:25:23.000Z" user="1Spatial"/>
                        </LastEdited>
                    </Metadata>
                    <IsShortcut>false</IsShortcut>
                    <Rule>
                        <Template>
                            <Parameter classLabel="IRI" objLabel=""/>
                            <RangePredicate minInclusive="true" maxInclusive="true">
                                <BuiltinFnValue fnName="to_integer">
                                    <BuiltinFnValue fnName="re_search">
                                        <BuiltinFnValue fnName="to_string">
                                            <DynamicValue classRef="IRI" objRef="" propName="Value_Date"/>
                                        </BuiltinFnValue>
                                        <StaticValue datatype="string" value="\d\d\d\d"/>
                                    </BuiltinFnValue>
                                </BuiltinFnValue>
                                <DifferenceValue>
                                    <DynamicValue classRef="IRI" objRef="" propName="Year_Record"/>
                                    <StaticValue datatype="integer" value="2"/>
                                </DifferenceValue>
                                <DynamicValue classRef="IRI" objRef="" propName="Year_Record"/>
                            </RangePredicate>
                        </Template>
                    </Rule>
                </Item>
                <Item id="RULE://HPMS_tc/Cross, LRS, Sample, Length 2018/Value_Date is same Year as Year Record">
                    <Metadata>
                        <Name>Value_Date is same Year as Year Record</Name>
                        <Created>
                            <UserDate date="2019-12-04T10:25:23.000Z" user="1Spatial"/>
                        </Created>
                        <LastEdited>
                            <UserDate date="2019-12-04T10:25:23.000Z" user="1Spatial"/>
                        </LastEdited>
                    </Metadata>
                    <IsShortcut>false</IsShortcut>
                    <Rule>
                        <Template>
                            <Parameter classLabel="IRI" objLabel=""/>
                            <RelationalPredicate>
                                <BuiltinFnValue fnName="to_real">
                                    <BuiltinFnValue fnName="re_search">
                                        <BuiltinFnValue fnName="to_string">
                                            <DynamicValue classRef="IRI" objRef="" propName="Value_Date"/>
                                        </BuiltinFnValue>
                                        <StaticValue datatype="string" value="\d\d\d\d"/>
                                    </BuiltinFnValue>
                                </BuiltinFnValue>
                                <EqualsRelation/>
                                <DynamicValue classRef="IRI" objRef="" propName="Year_Record"/>
                            </RelationalPredicate>
                        </Template>
                    </Rule>
                </Item>
            </RuleFolder>
        </RuleFolder>
    </RuleFolder>
</Backup>
